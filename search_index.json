[["index.html", "MNet Chapter 1 Introduction &amp; Installation 1.1 Overview of Workflow 1.2 Installation", " MNet Tuantuan Gui, Xuan Liu and Hai Fang 2024-02-01 Chapter 1 Introduction &amp; Installation The surge in metabolomics and transcriptomic data has necessitated the development of innovative network analysis tools for the integrated analysis of multi-omics data. However, current tools often focus on individual pathways, extracting the subnetwork for the interested genes and metabolites or extracting the correlation subnetwork, neglecting the valuable information embedded in gene-metabolite or metabolite-metabolite knowledge networks across all metabolic pathways. In response to this gap, we introduce an integrated analytical tool MNet, an R package for mining metabolomics coupled with clinical and transcriptomic data. MNet introduces three key feature to enhance the analytical capabilities. Firstly, MNet incorporates a built-in knowledgebase called ‘dbMNet’ that has been curated over time by experts. It represents a unique reference resource for metabolomics, which includes all currently available gene-metabolite pairs in humans, as well as metabolite-metabolite pairs. Secondly, MNet facilitates extended pathway enrichment analysis (EPEA), extended differential abundance analysis (EDA) and extended data sets enrichment analysis (ESEA). These functionalities enable the identification of dysregulated metabolic pathways by simultaneously considering both metabolites and genes. Thirdly, based on ‘dbMNet’ knowledgebase, MNet supports metabolic-related network analysis, considering both gene-metabolite and metabolite-metabolite pairs. Building upon case presentations, MNet emerges as a pivotal tool, demonstrating its efficacy in delivering a comprehensive grasp of metabolic dysregulation. It stands out as an invaluable resource, empowering researchers with the capability to conduct thorough and insightful multi-omics investigations. 1.1 Overview of Workflow The package MNet is designed to provide a collection of functionalities aiding in metabolome data interpretation together with clinical data and gene expression data. It not only supports the routine analyses and visualisations in terms of metabolomic datasets (including but not limited to: differential metabolites analyses/visualisations/feature selection), the extended pathway enrichment analyses which is designed to detect which pathways are differentially abundant between two conditions, but also is capable of carrying out integrated analysis of metabolic and gene expression data (the metabolite and gene pathway analyses and the subnetwork analyses of metabolite-gene network analyses). 1.2 Installation The R package MNet requires R version 4.0.0 or higher, please see https://cran.r-project.org. if(!require(devtools)){ install.packages(&quot;devtools&quot;) } MNet is available for all operating systems and can be installed via the Github. devtools::install_github(&quot;tuantuangui/MNet&quot;) library(MNet) check the package ‘MNet’ successfully installed library(help=MNet) "],["database-construction.html", "Chapter 2 Database construction 2.1 KEGG pathway’s metabolite and gene 2.2 KEGG metabolite-metabolite pairs and metabolite-gene pairs 2.3 Graphite 2.4 BiGG", " Chapter 2 Database construction 2.1 KEGG pathway’s metabolite and gene This is the metabolites and the genes in every metabolism KEGG pathway.6821个代谢物和基因. library(KEGGREST) library(dplyr) ## 所有人代谢相关通路，这个是之前自己整理的 pathway_meta &lt;- data.table::fread(&quot;result/pathway_hsa.txt&quot;,sep=&quot;\\t&quot;,header=F) %&gt;% as.data.frame() ## 对每个通路提取对应的基因和代谢物 result_gene &lt;- data.frame() result_compound &lt;- data.frame() for (i in 1:length(pathway_meta$V2)){ print(pathway_meta$V2[i]) path &lt;- keggGet(pathway_meta$V2[i]) # print(pathway_meta$V2[i]) ## 提取此通路的基因信息 gene.info &lt;- path[[1]]$GENE %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;V1&quot;=&quot;.&quot;) %&gt;% tidyr::separate(V1,sep=&quot;;&quot;,&quot;V1&quot;) %&gt;% dplyr::pull(V1) ## 提取基因中的gene symbol gene.symbol &lt;- unique(gene.info[1:length(gene.info)%%2 == 0]) #gene.id &lt;- gene.info[1:length(gene.info)%%2 == 1] # 生成gene symbol和Entrez ID匹配的数据框 # gene.df &lt;- data.frame(gene.symbol = gene.symbol,gene.id = gene.id,kegg=pathway_meta$V2[i],kegg_path=path[[1]]$PATHWAY_MAP) gene.df &lt;- data.frame(type=&quot;gene&quot;,name = gene.symbol,kegg_pathwayid=pathway_meta$V2[i],kegg_pathwayname=path[[1]]$PATHWAY_MAP,kegg_category =pathway_meta$V1[i]) #head(gene.df) result_gene &lt;- rbind(result_gene,gene.df) ## 提取此通路的代谢物信息 (这里会有一些药物，是否去掉？&quot;hsa00514&quot;,&quot;hsa00533&quot;, &quot;hsa00511&quot;通路没有compound？方老师帮忙check一下？) if (length(path[[1]]$COMPOUND)&gt;0) { compound.info &lt;- path[[1]]$COMPOUND %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;V1&quot;=&quot;.&quot;) %&gt;% rownames() # 生成compound和对应的pathway信息 compound.df &lt;- data.frame(type=&quot;metabolite&quot;,name = compound.info,kegg_pathwayid=pathway_meta$V2[i],kegg_pathwayname=path[[1]]$PATHWAY_MAP,kegg_category =pathway_meta$V1[i]) result_compound &lt;- rbind(result_compound,compound.df) } } result &lt;- rbind(result_gene,result_compound) %&gt;% as_tibble() dim(result) write.table(result,&quot;result/KEGGpathway_metabolite_gene-v0117.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 2.2 KEGG metabolite-metabolite pairs and metabolite-gene pairs 2.2.1 KEGG’s reaction and compound’s download ## the code is runing in 2024.01.15 library(KEGGREST) library(plyr) #source(&quot;/Users/guituantuan/Downloads/R-packages/RbioRXN-master/R/get.kegg.all.R&quot;) #source(&quot;/Users/guituantuan/Downloads/R-packages/RbioRXN-master/R/get.kegg.byId.R&quot;) ##断掉的话就多试几次 source(&quot;https://raw.githubusercontent.com/cran/RbioRXN/master/R/get.kegg.all.R&quot;) source(&quot;https://raw.githubusercontent.com/cran/RbioRXN/master/R/get.kegg.byId.R&quot;) ## KEGG数据库中的代谢反应和代谢物注释信息 ------------------------------------------------- #8:33- keggAll = get.kegg.all() saveRDS(keggAll, file = &quot;result/keggAll-v0115.RData&quot;) #load(&quot;result/keggAll-v0115.RData&quot;) #keggAll &lt;- readRDS(&quot;result/keggAll-v0115.RData&quot;) ## 查看代谢反应和代谢物的数量 dim(keggAll$reaction) # [1] 11990 14 dim(keggAll$compound) # [1] 19270 25 write.csv(keggAll$reaction,file = &quot;result/keggAllreaction_v20240115.csv&quot;,row.names = F) write.csv(keggAll$compound,file = &quot;result/keggAllcompound_v20240115.csv&quot;,row.names = F) 2.2.2 Downloading the enzyme and its corresponding gene information from the htext,and extract the gene and the enzyme’s relationship Download the htext file. https://www.genome.jp/kegg-bin/get_htext?hsa01000 grep &quot;^E&quot; result/hsa01000.keg | sed &#39;s/E //g&#39;|cut -d&quot; &quot; -f2 |cut -d&quot;;&quot; -f1 &gt;result/gene.txt grep &quot;^E&quot; result/hsa01000.keg | sed &#39;s/E //g&#39;|sed &#39;s/\\[EC\\:/ /g&#39; |sed &#39;s/\\] //g&#39; |cut -f3 &gt;result/enzyme.txt ###sed &#39;s/\\[EC\\:/ /g&#39;后面为制表符 paste result/gene.txt result/enzyme.txt |grep -v &quot;D-dopachrome&quot; |grep -v &quot;cytochrome&quot;|grep -v &quot;putative&quot; &gt;result/gene_enzyme.txt the gene_enzyme.txt is like this ADH5^I1.1.1.284 1.1.1.1$ ADH1A^I1.1.1.1$ 2.2.3 Extracting the metabolite-gene pairs and metabolite-metabolite pairs library(dplyr) ## Transformed the enzyme and its corresponding gene to one-to-one relationship gene_enzyme &lt;- data.table::fread(&quot;result/gene_enzyme.txt&quot;,header=F) %&gt;% as.data.frame() %&gt;% tidyr::separate_rows(&quot;V2&quot;,sep=&quot; &quot;) %&gt;% unique() %&gt;% dplyr::rename(&quot;gene_name&quot;=&quot;V1&quot;) %&gt;% dplyr::rename(&quot;enzyme&quot;=&quot;V2&quot;) ## all the reaction in kegg a &lt;- read.csv(&quot;result/keggAllreaction_v20240115.csv&quot;) # get all the metabolite and its corresponding gene from all the reaction in kegg ## the metabolite-gene pairs are exacted from every compound in the equation and the gene with the enzyme metabolite_gene &lt;- a %&gt;% dplyr::select(c(&quot;EQUATION&quot;,&quot;ENZYME&quot;)) %&gt;% tidyr::separate_rows(EQUATION,sep=&quot; &lt;=&gt; &quot;) %&gt;% tidyr::separate_rows(EQUATION,sep=&quot; &quot;) %&gt;% dplyr::filter(grepl(&quot;^C&quot;,EQUATION)) %&gt;% tidyr::separate_rows(ENZYME,sep=&quot;///&quot;) %&gt;% dplyr::rename(&quot;compound&quot;=&quot;EQUATION&quot;) %&gt;% dplyr::rename(&quot;enzyme&quot;=&quot;ENZYME&quot;) %&gt;% dplyr::left_join(gene_enzyme,by=&quot;enzyme&quot;) %&gt;% dplyr::filter(!is.na(gene_name)) %&gt;% dplyr::select(-&quot;enzyme&quot;) %&gt;% dplyr::mutate(compound=gsub(&quot;[(]n[)]&quot;,&quot;&quot;,compound)) %&gt;% dplyr::mutate(compound=gsub(&quot;[(]m[)]&quot;,&quot;&quot;,compound)) %&gt;% dplyr::mutate(compound=gsub(&quot;[(]n[+]1[)]&quot;,&quot;&quot;,compound)) %&gt;% dplyr::mutate(compound=gsub(&quot;[(]n[+]m[)]&quot;,&quot;&quot;,compound)) %&gt;% dplyr::mutate(compound=gsub(&quot;[(]n[-]1[)]&quot;,&quot;&quot;,compound)) %&gt;% unique() %&gt;% dplyr::mutate(src_type=&quot;metabolite&quot;) %&gt;% dplyr::mutate(dest_type=&quot;gene&quot;) %&gt;% dplyr::rename(&quot;src&quot;=&quot;compound&quot;) %&gt;% dplyr::rename(&quot;dest&quot;=&quot;gene_name&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;)) # get all the metabolite-metabolite pairs in the reactions ## get the metabolite from the EQUATION, the metabolite-metabolite pairs are exacted from every compound in left of equation and every compound in right of equation. metabolite_metabolite &lt;- a %&gt;% dplyr::select(c(&quot;EQUATION&quot;,&quot;ENZYME&quot;)) %&gt;% tidyr::separate(EQUATION,c(&quot;a&quot;,&quot;b&quot;),sep=&quot; &lt;=&gt; &quot;)%&gt;% tidyr::separate_rows(a,sep=&quot; &quot;) %&gt;% tidyr::separate_rows(b,sep=&quot; &quot;) %&gt;% dplyr::filter(grepl(&quot;^C&quot;,a)) %&gt;% dplyr::filter(grepl(&quot;^C&quot;,b)) %&gt;% dplyr::select(c(&quot;a&quot;,&quot;b&quot;)) %&gt;% unique() %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]n[)]&quot;,&quot;&quot;,a)) %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]n[+]m[)]&quot;,&quot;&quot;,metabolite_1)) %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]side&quot;,&quot;&quot;,metabolite_1)) %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]m[+]n[)]&quot;,&quot;&quot;,metabolite_1)) %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]n[+]1[)]&quot;,&quot;&quot;,metabolite_1)) %&gt;% dplyr::mutate(metabolite_1=gsub(&quot;[(]m[)]&quot;,&quot;&quot;,metabolite_1)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[)]&quot;,&quot;&quot;,b)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[+]m[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]side&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]m[+]n[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[+]1[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]m[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[-]1[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]x[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[-]x[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]n[+]2[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::mutate(metabolite_2=gsub(&quot;[(]m[-]1[)]&quot;,&quot;&quot;,metabolite_2)) %&gt;% dplyr::select(-c(&quot;a&quot;,&quot;b&quot;)) %&gt;% dplyr::filter(metabolite_1 != metabolite_2) %&gt;% dplyr::mutate(src_type=&quot;metabolite&quot;) %&gt;% dplyr::mutate(dest_type=&quot;metabolite&quot;) %&gt;% dplyr::rename(&quot;src&quot;=&quot;metabolite_1&quot;) %&gt;% dplyr::rename(&quot;dest&quot;=&quot;metabolite_2&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;)) write.table(metabolite_gene,&quot;result/KEGG_metabolite_gene.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(metabolite_metabolite,&quot;result/KEGG_metabolite_metabolite.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 2.2.4 Conclusion The number of metabolite-gene pairs is 33537; The number of metabolite-metabolite pairs is 33537. The number of metabolite is 11788; The number of gene is 2607. 2.3 Graphite 2.3.1 Download all the data from graphite library(graphite) library(clipper) library(dplyr) kpaths &lt;- pathways(&quot;hsapiens&quot;, &quot;kegg&quot;) kpaths_result &lt;- data.frame() for (i in 1:length(kpaths)) { kid &lt;- attributes(kpaths[[i]])$id ktitle &lt;- attributes(kpaths[[i]])$title kpaths_1 &lt;- convertIdentifiers(convertIdentifiers(kpaths[[i]], &quot;symbol&quot;),&quot;KEGGCOMP&quot;) kpaths_result_temp &lt;- edges(kpaths_1,&quot;mixed&quot;) %&gt;% dplyr::mutate(pathwayid=kid) %&gt;% dplyr::mutate(pathway=ktitle) kpaths_result &lt;- rbind(kpaths_result,kpaths_result_temp) } write.table(kpaths_result,&quot;result/Graphite/gene-metabolite-kegg.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) spaths &lt;- pathways(&quot;hsapiens&quot;, &quot;smpdb&quot;) smpdb_result &lt;- data.frame() for (i in 1:length(spaths)) { kid &lt;- attributes(spaths[[i]])$id ktitle &lt;- attributes(spaths[[i]])$title smpdb_1 &lt;- convertIdentifiers(convertIdentifiers(spaths[[i]], &quot;symbol&quot;),&quot;KEGGCOMP&quot;) smpdb_result_temp &lt;- edges(smpdb_1, &quot;mixed&quot;) %&gt;% dplyr::mutate(pathwayid=kid) %&gt;% dplyr::mutate(pathway=ktitle) smpdb_result &lt;- rbind(smpdb_result,smpdb_result_temp) } write.table(smpdb_result,&quot;result/Graphite/gene-metabolite-smpdb.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) wikipaths &lt;- pathways(&quot;hsapiens&quot;, &quot;wikipathways&quot;) wikipaths_result &lt;- data.frame() for (i in 1:length(wikipaths)) { kid &lt;- attributes(wikipaths[[i]])$id ktitle &lt;- attributes(wikipaths[[i]])$title wikipaths_1 &lt;- convertIdentifiers(convertIdentifiers(wikipaths[[i]], &quot;symbol&quot;),&quot;KEGGCOMP&quot;) wikipaths_result_temp &lt;- edges(wikipaths_1,&quot;mixed&quot;) %&gt;% dplyr::mutate(pathwayid=kid) %&gt;% dplyr::mutate(pathway=ktitle) wikipaths_result &lt;- rbind(wikipaths_result,wikipaths_result_temp) } write.table(wikipaths_result,&quot;result/Graphite/gene-metabolite-wikipaths.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) reactomepaths &lt;- pathways(&quot;hsapiens&quot;, &quot;reactome&quot;) reactome_result &lt;- data.frame() for (i in 1:length(reactomepaths)) { kid &lt;- attributes(reactomepaths[[i]])$id ktitle &lt;- attributes(reactomepaths[[i]])$title reactome_1 &lt;- convertIdentifiers(convertIdentifiers(reactomepaths[[i]], &quot;symbol&quot;),&quot;KEGGCOMP&quot;) reactome_result_temp &lt;- edges(reactome_1,&quot;mixed&quot;) %&gt;% dplyr::mutate(pathwayid=kid) %&gt;% dplyr::mutate(pathway=ktitle) reactome_result &lt;- rbind(reactome_result,reactome_result_temp) } write.table(reactome_result,&quot;result/Graphite/gene-metabolite-reactome.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) 2.3.2 Download the information of metabolism pathways ### wikipathway rev all.txt|cut -d&quot;_&quot; -f2|rev &gt;all.1.txt cat /dev/null &gt; test.txt cat all.1.txt |while read line do grep TERM homo/*${line}_*.gpml |cut -d&quot;&gt;&quot; -f2|cut -d&quot;&lt;&quot; -f1| tr -s &quot;\\n&quot; &quot;;&quot;|sed -e &#39;s/;$//g&#39; | sed &quot;s/^/${line} /&quot; &gt;&gt;test.txt done grep -i metabolic test.txt &gt;test_metabolic.txt ### smpdb wget https://smpdb.ca/downloads/smpdb_pathways.csv.zip ### reactome #R-HSA-1430728 is the metabolism, then choose the hierarchical is lower than it ### kegg #choose the metabolism pathway 2.3.3 Extract the data of metabolism library(dplyr) kegg_data_metabolism &lt;- data.table::fread(&quot;result/Graphite/gene-metabolite-kegg.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% unique(kegg_pathway$PATHWAY)) %&gt;% dplyr::select(-c(&quot;direction&quot;,&quot;type&quot;)) %&gt;% unique() %&gt;% dplyr::filter(src_type ==&quot;KEGGCOMP&quot; | dest_type==&quot;KEGGCOMP&quot;) %&gt;% dplyr::mutate(src_new = ifelse(src_type==&quot;KEGGCOMP&quot;,src,dest), dest_new = ifelse(src_type==&quot;KEGGCOMP&quot;,dest,src), src_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,src_type,dest_type), dest_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,dest_type,src_type)) %&gt;% dplyr::mutate(src_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,src_new,dest_new), src_new)) %&gt;% dplyr::mutate(dest_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,dest_new,src_new), dest_new)) %&gt;% dplyr::select(-c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;src_new&quot;,&quot;dest_new&quot;)) %&gt;% dplyr::rename(&quot;src_type&quot;=&quot;src_type_new&quot;,&quot;src&quot;=&quot;src_new1&quot;,&quot;dest_type&quot;=&quot;dest_type_new&quot;,&quot;dest&quot;=&quot;dest_new1&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;pathwayid&quot;,&quot;pathway&quot;)) %&gt;% unique() write.table(kegg_data_metabolism,&quot;result/Graphite/gene-metabolite-kegg_metabolism.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ### smpdb metabolism_pathway &lt;- read.csv(&quot;result/Graphite/smpdb_pathways.csv&quot;) %&gt;% dplyr::filter(Subject==&quot;Metabolic&quot;) smpdb_data &lt;- data.table::fread(&quot;result/Graphite/gene-metabolite-smpdb.txt&quot;) %&gt;% as.data.frame() smpdb_metabolism &lt;- smpdb_data %&gt;% dplyr::filter(pathway %in% metabolism_pathway$Name) %&gt;% dplyr::filter(src_type==&quot;KEGGCOMP&quot;|dest_type==&quot;KEGGCOMP&quot;) %&gt;% dplyr::filter(!grepl(&quot;De Novo&quot;,pathway)) %&gt;% dplyr::mutate(pathway_new=ifelse(grepl(&quot;Phosphatidylcholine Biosynthesis&quot;,pathway), &quot;Phosphatidylcholine Biosynthesis&quot;,pathway)) %&gt;% dplyr::mutate(pathway_new=ifelse(grepl(&quot;Cardiolipin Biosynthesis&quot;,pathway_new), &quot;Cardiolipin Biosynthesis&quot;,pathway_new)) %&gt;% dplyr::mutate(pathway_new=ifelse(grepl(&quot;Phosphatidylethanolamine Biosynthesis&quot;,pathway_new), &quot;Phosphatidylethanolamine Biosynthesis&quot;,pathway_new)) %&gt;% dplyr::mutate(pathway_new=ifelse(grepl(&quot;Mitochondrial Beta-Oxidation&quot;,pathway_new), &quot;Mitochondrial Beta-Oxidation&quot;,pathway_new)) %&gt;% dplyr::select(-&quot;pathway&quot;) %&gt;% dplyr::rename(&quot;pathway&quot;=&quot;pathway_new&quot;) %&gt;% dplyr::mutate(src_new = ifelse(src_type==&quot;KEGGCOMP&quot;,src,dest), dest_new = ifelse(src_type==&quot;KEGGCOMP&quot;,dest,src), src_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,src_type,dest_type), dest_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,dest_type,src_type)) %&gt;% dplyr::mutate(src_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,src_new,dest_new), src_new)) %&gt;% dplyr::mutate(dest_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,dest_new,src_new), dest_new)) %&gt;% dplyr::select(-c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;src_new&quot;,&quot;dest_new&quot;)) %&gt;% dplyr::rename(&quot;src_type&quot;=&quot;src_type_new&quot;,&quot;src&quot;=&quot;src_new1&quot;,&quot;dest_type&quot;=&quot;dest_type_new&quot;,&quot;dest&quot;=&quot;dest_new1&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;pathwayid&quot;,&quot;pathway&quot;)) %&gt;% unique() ### reactome ## metabolism pathway ### reactome_metabolism_pathwayid &lt;- data.table::fread(&quot;result/Graphite/ReactomePathwaysRelation.txt&quot;,header=F) %&gt;% as.data.frame() %&gt;% dplyr::filter(V1==&quot;R-HSA-1430728&quot;) reactome_metabolism_data &lt;- data.table::fread(&quot;result/Graphite/gene-metabolite-reactome.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathwayid %in% reactome_metabolism_pathwayid$V2) %&gt;% dplyr::filter(src_type==&quot;KEGGCOMP&quot;|dest_type==&quot;KEGGCOMP&quot;) %&gt;% dplyr::mutate(src_new = ifelse(src_type==&quot;KEGGCOMP&quot;,src,dest), dest_new = ifelse(src_type==&quot;KEGGCOMP&quot;,dest,src), src_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,src_type,dest_type), dest_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,dest_type,src_type)) %&gt;% dplyr::mutate(src_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,src_new,dest_new), src_new)) %&gt;% dplyr::mutate(dest_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,dest_new,src_new), dest_new)) %&gt;% dplyr::select(-c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;src_new&quot;,&quot;dest_new&quot;)) %&gt;% dplyr::rename(&quot;src_type&quot;=&quot;src_type_new&quot;,&quot;src&quot;=&quot;src_new1&quot;,&quot;dest_type&quot;=&quot;dest_type_new&quot;,&quot;dest&quot;=&quot;dest_new1&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;pathwayid&quot;,&quot;pathway&quot;)) %&gt;% unique() write.table(reactome_metabolism_data,&quot;result/Graphite/gene-metabolite-reactome_metabolism.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ### wikipathways wikipathway_metabolism_id &lt;- data.table::fread(&quot;wikipath/test_metabolic.txt&quot;,header=F) %&gt;% as.data.frame() wikipathway_data &lt;- data.table::fread(&quot;result/Graphite/gene-metabolite-wikipaths.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathwayid %in% wikipathway_metabolism_id$V1) %&gt;% dplyr::filter(src_type==&quot;KEGGCOMP&quot;|dest_type==&quot;KEGGCOMP&quot;) %&gt;% dplyr::mutate(src_new = ifelse(src_type==&quot;KEGGCOMP&quot;,src,dest), dest_new = ifelse(src_type==&quot;KEGGCOMP&quot;,dest,src), src_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,src_type,dest_type), dest_type_new=ifelse(src_type==&quot;KEGGCOMP&quot;,dest_type,src_type)) %&gt;% dplyr::mutate(src_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,src_new,dest_new), src_new)) %&gt;% dplyr::mutate(dest_new1=ifelse(src_type==&quot;KEGGCOMP&quot; &amp; dest_type==&quot;KEGGCOMP&quot;, ifelse(src_new&gt;dest_new,dest_new,src_new), dest_new)) %&gt;% dplyr::select(-c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;src_new&quot;,&quot;dest_new&quot;)) %&gt;% dplyr::rename(&quot;src_type&quot;=&quot;src_type_new&quot;,&quot;src&quot;=&quot;src_new1&quot;,&quot;dest_type&quot;=&quot;dest_type_new&quot;,&quot;dest&quot;=&quot;dest_new1&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;src&quot;,&quot;dest_type&quot;,&quot;dest&quot;,&quot;pathwayid&quot;,&quot;pathway&quot;)) %&gt;% unique() write.table(wikipathway_data,&quot;result/Graphite/gene-metabolite-wikipathway_metabolism.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) 2.3.4 Combine the data from database kegg, wikipathway, reactome, smpdb and then uniq the data cat gene-metabolite-*metabolism.txt |cut -f1-4,6|sort|uniq &gt;result.graphite.txt 2.4 BiGG 2.4.1 Down all the models in the BiGG curl &#39;http://bigg.ucsd.edu/api/v2/models&#39; Then, choice the model from Homo sapiens,then in reserve model is iAT_PLT_636, iAB_RBC_283, RECON1, Recon3D. Get all the reactions names in the 4 human models. curl &#39;http://bigg.ucsd.edu/api/v2/models/iAT_PLT_636/reactions&#39; &gt;result/BiGG/iAT_PLT_636.reactions curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/reactions&#39; &gt;result/BiGG/iAB_RBC_283.reactions curl &#39;http://bigg.ucsd.edu/api/v2/models/RECON1/reactions&#39; &gt;result/BiGG/RECON1.reactions curl &#39;http://bigg.ucsd.edu/api/v2/models/Recon3D/reactions&#39; &gt;result/BiGG/Recon3D.reactions Change the json reaction names to txt file. tt&lt;-jsonlite::stream_in(file(&quot;result/BiGG/iAB_RBC_283.reactions&quot;),pagesize = 100) write.table(tt$results[[1]],&quot;result/BiGG/iAB_RBC_283.reactions.txt&quot;,quote=F,row.names=F,col.names=F) 2.4.2 Download the every reaction curl &#39;http://bigg.ucsd.edu/api/v2/models/iAT_PLT_636/reactions/10FTHF6GLUtm&#39; &gt;result/BiGG/iAT_PLT_636/reaction/json/10FTHF6GLUtm.txt curl &#39;http://bigg.ucsd.edu/api/v2/models/iAT_PLT_636/reactions/10FTHF7GLUtl&#39; &gt;result/BiGG/iAT_PLT_636/reaction/json/10FTHF7GLUtl.txt Get the information in every reaction. The R script that change the reaction information in json to txt. args &lt;- commandArgs(T) library(dplyr) mydata &lt;- paste0(&quot;result/BiGG/&quot;,args[1],&quot;/reaction/json/&quot;,args[2],&quot;.txt&quot;) recon1&lt;-jsonlite::stream_in(file(mydata),pagesize = 100) metabolite_biggid &lt;- recon1$metabolites[[1]]$bigg_id metabolites &lt;- recon1$metabolites[[1]]$name compartment_bigg_id &lt;- recon1$metabolites[[1]]$compartment_bigg_id gene &lt;- recon1$results[[1]]$genes[[1]]$name subsystem &lt;- recon1$results[[1]]$subsystem model=args[1] if (length(gene)&gt;0) { dd &lt;- data.frame(metabolite_biggid1=paste(metabolite_biggid,compartment_bigg_id,sep=&quot;_&quot;),src_type=&quot;metabolite&quot;,src=metabolites,metabolite_biggid2=NA,dest_type=&quot;gene&quot;,dest=paste(gene,collapse=&quot;;&quot;),subsystems=subsystem,models=model) # write.table(dd,paste0(args[1],&quot;_txt/&quot;,args[2],&quot;.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) }else { dd &lt;- data.frame() } if (length(unique(recon1$metabolites[[1]]$stoichiometry))&gt;1) { metabolites_stoichiometry1 &lt;- recon1$metabolites[[1]] %&gt;% dplyr::filter(stoichiometry&gt;0) metabolites_stoichiometry2 &lt;- recon1$metabolites[[1]] %&gt;% dplyr::filter(stoichiometry&lt;0) result &lt;- data.frame() for (i in 1:nrow(metabolites_stoichiometry1)) { for (j in 1:nrow(metabolites_stoichiometry2)) { temp &lt;- data.frame(metabolite_biggid1=paste(metabolites_stoichiometry1$bigg_id[i],metabolites_stoichiometry1$compartment_bigg_id[i],sep=&quot;_&quot;),src_type=&quot;metabolite&quot;,src=metabolites_stoichiometry1$name[i], metabolite_biggid2=paste(metabolites_stoichiometry2$bigg_id[j],metabolites_stoichiometry2$compartment_bigg_id[j],sep=&quot;_&quot;),dest_type=&quot;metabolite&quot;,dest=metabolites_stoichiometry2$name[j],subsystems=subsystem,models=model) result &lt;- rbind(result,temp) } } result_final &lt;- rbind(dd,result) write.table(result_final,paste0(&quot;result/BiGG/&quot;,args[1],&quot;/reaction/txt/&quot;,args[2],&quot;.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) }else { print(0) } Run the R script that change the reaction information in json to txt in batch. cat iAB_RBC_283.reaction.txt |while read line do Rscript reaction_json2txt.R iAB_RBC_283 $line done cat iAT_PLT_636.reaction.txt |while read line do Rscript reaction_json2txt.R iAT_PLT_636 $line done cat RECON1.reaction.txt |while read line do Rscript reaction_json2txt.R RECON1 $line done cat Recon3D.reaction.txt |while read line do Rscript reaction_json2txt.R Recon3D $line done Combine all the reactions info include the gene-metabolite pair,the metabolite-metabolite pair,subsystem,model. cat result/BiGG/iAB_RBC_283/reaction/txt/*|grep -v metabolite_biggid1 &gt;result/BiGG/cat_reaction_info_iAB_RBC_283.txt cat result/BiGG/iAT_PLT_636/reaction/txt/*|grep -v metabolite_biggid1 &gt;result/BiGG/cat_reaction_info_iAT_PLT_636.txt cat result/BiGG/Recon3D/reaction/txt/*|grep -v metabolite_biggid1 &gt;result/BiGG/cat_reaction_info_Recon3D.txt cat result/BiGG/RECON1/reaction/txt/*|grep -v metabolite_biggid1 &gt;result/BiGG/cat_reaction_info_RECON1.txt 2.4.3 Exact all the metabolites names in every model in BiGG curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/metabolites&#39; &gt;result/BiGG/iAB_RBC_283_metabolite.json curl &#39;http://bigg.ucsd.edu/api/v2/models/iAT_PLT_636/metabolites&#39; &gt;result/BiGG/iAT_PLT_636_metabolite.json curl &#39;http://bigg.ucsd.edu/api/v2/models/Recon3D/metabolites&#39; &gt;result/BiGG/Recon3D_metabolite.json curl &#39;http://bigg.ucsd.edu/api/v2/models/RECON1/metabolites&#39; &gt;result/BiGG/RECON1_metabolite.json Change the json to txt. args=commandArgs(T) recon1&lt;-jsonlite::stream_in(file(paste0(&quot;result/BiGG/&quot;,args[1],&quot;_metabolite.json&quot;)),pagesize = 100) aa &lt;- recon1$results[[1]] write.table(aa$bigg_id,paste0(&quot;result/BiGG/&quot;,args[1],&quot;_metabolite.txt&quot;),row.names = F,col.names=F,sep=&quot;\\t&quot;,quote=F) Use the script. Rscript metabolitename_json2txt.R iAB_RBC_283 Rscript metabolitename_json2txt.R iAT_PLT_636 Rscript metabolitename_json2txt.R RECON1 Rscript metabolitename_json2txt.R Recon3D Download every metabolite information. curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/metabolites/13dpg_c&#39; &gt;result/BiGG/iAB_RBC_283_metabolites/13dpg_c.json curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/metabolites/23dpg_c&#39; &gt;result/BiGG/iAB_RBC_283_metabolites/23dpg_c.json curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/metabolites/2kmb_c&#39; &gt;result/BiGG/iAB_RBC_283_metabolites/2kmb_c.json curl &#39;http://bigg.ucsd.edu/api/v2/models/iAB_RBC_283/metabolites/2pg_c&#39; &gt;result/BiGG/iAB_RBC_283_metabolites/2pg_c.json The R script that exact the KEGG ID in metabolite file. args &lt;- commandArgs(T) mydata &lt;- paste0(&quot;result/BiGG/&quot;,args[1],&quot;/metabolite/json/&quot;,args[2],&quot;.json&quot;) # &quot;iAB_RBC_283_metabolites/glu__L_c.json&quot; recon1&lt;-jsonlite::stream_in(file(mydata),pagesize = 100) kegg_id &lt;- paste(recon1$database_links$`KEGG Compound`[[1]]$id,collapse = &quot;;&quot;) name &lt;- recon1$name result &lt;- data.frame(name=name,kegg_id=kegg_id,source=args[1]) write.table(result,paste0(&quot;result/BiGG/&quot;,args[1],&quot;/metabolite/txt/&quot;,args[2],&quot;.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) Run the R script that exact the KEGG ID in the metabolite file. cat result/BiGG/iAB_RBC_283_metabolite.txt|while read line do Rscript metabolite_json2txt.R iAB_RBC_283 ${line} done cat result/BiGG/iAT_PLT_636_metabolite.txt |while read line do Rscript metabolite_json2txt.R iAT_PLT_636 ${line} done cat result/BiGG/RECON1_metabolite.txt|while read line do Rscript metabolite_json2txt.R RECON1 ${line} done cat result/BiGG/Recon3D_metabolite.txt|while read line do Rscript metabolite_json2txt.R Recon3D ${line} done Combine all the metabolite in 1 file for every model. cat result/BiGG/iAB_RBC_283/metabolite/txt/*_metabolite.txt|grep -v kegg_id &gt;result/BiGG/iAB_RBC_283_metabolite_all.txt cat result/BiGG/iAT_PLT_636/metabolite/txt/*_metabolite.txt |grep -v kegg_id &gt;result/BiGG/iAT_PLT_636_metabolite_all.txt cat result/BiGG/RECON1/metabolite/txt/*_metabolite.txt|grep -v kegg_id &gt;result/BiGG/RECON1_metabolite_all.txt cat result/BiGG/Recon3D/metabolite/txt/*_metabolite.txt|grep -v kegg_id &gt;result/BiGG/Recon3D_metabolite_all.txt 2.4.4 The R script that change the metabolite name to kegg id in the final output args &lt;- commandArgs(T) library(dplyr) metabolite_info &lt;- data.table::fread(paste0(&quot;result/BiGG/&quot;,args[1],&quot;_metabolite_all.txt&quot;),header=F) %&gt;% as.data.frame() gene_metabolite_pairs &lt;- data.table::fread(paste0(&quot;result/BiGG/cat_reaction_info_&quot;,args[1],&quot;.txt&quot;),header=F) %&gt;% as.data.frame() %&gt;% dplyr::left_join(metabolite_info,by=c(&quot;V3&quot;=&quot;V1&quot;)) %&gt;% dplyr::left_join(metabolite_info,by=c(&quot;V6&quot;=&quot;V1&quot;)) %&gt;% dplyr::mutate(src=ifelse(V2.y==&quot;&quot; | is.na(V2.y), V3.x,V2.y)) %&gt;% dplyr::mutate(dest=ifelse(V2==&quot;&quot; | is.na(V2), V6,V2)) %&gt;% dplyr::select(c(&quot;V2.x&quot;,&quot;src&quot;,&quot;V5&quot;,&quot;dest&quot;,&quot;V7&quot;,&quot;V8&quot;)) %&gt;% dplyr::rename(&quot;src_type&quot;=&quot;V2.x&quot;,&quot;dest_type&quot;=&quot;V5&quot;,&quot;subsystems&quot;=&quot;V7&quot;,&quot;model&quot;=&quot;V8&quot;) %&gt;% tidyr::separate_rows(src,sep=&quot;;&quot;) %&gt;% tidyr::separate_rows(dest,sep=&quot;;&quot;) %&gt;% dplyr::filter(src != dest) %&gt;% unique() write.table(gene_metabolite_pairs,paste0(&quot;result/BiGG/result_&quot;,args[1],&quot;.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) Use the R script that change the metabolite name to KEGG ID. Rscript result.R iAB_RBC_283 Rscript result.R iAT_PLT_636 Rscript result.R RECON1 Rscript result.R Recon3D cat result_*.txt |cut -f1-5 |sort|uniq &gt;result/BiGG/result.BiGG.txt 2.4.5 Combine the data from BiGG and graphite cat result/BiGG/result.BiGG.txt ../graphite/result.graphite.txt |sed s/KEGGCOMP/metabolite/g |sed s/SYMBOL/gene/g |sort|uniq &gt;gene-metabolite_BiGG_graphite.txt dat &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/database/gene-metabolite/gene-metabolite_BiGG_graphite.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(keggId!=gene) %&gt;% dplyr::mutate(keggId_new=ifelse(src_type==&quot;metabolite&quot; &amp; dest_type==&quot;metabolite&quot;, ifelse(keggId&gt;gene,keggId,gene), keggId)) %&gt;% dplyr::mutate(gene_new=ifelse(src_type==&quot;metabolite&quot; &amp; dest_type==&quot;metabolite&quot;, ifelse(keggId&gt;gene,gene,keggId), gene)) %&gt;% dplyr::select(-c(&quot;keggId&quot;,&quot;gene&quot;)) %&gt;% dplyr::rename(&quot;keggId&quot;=&quot;keggId_new&quot;,&quot;gene&quot;=&quot;gene_new&quot;) %&gt;% dplyr::select(c(&quot;src_type&quot;,&quot;keggId&quot;,&quot;dest_type&quot;,&quot;gene&quot;,&quot;subsystems&quot;)) dat$subsystems &lt;- stringr::str_to_title(dat$subsystems) kegg_pathway1 &lt;- kegg_pathway %&gt;% dplyr::mutate(pathway1=stringr::str_to_title(PATHWAY)) %&gt;% dplyr::select(c(&quot;pathway1&quot;,&quot;pathway_type&quot;)) %&gt;% dplyr::rename(&quot;subsystems&quot;=&quot;pathway1&quot;) %&gt;% unique() pathway_type_1 &lt;- data.table::fread(&quot;pathway_type.txt&quot;,header=F) %&gt;% as.data.frame() names(pathway_type_1) &lt;- c(&quot;subsystems&quot;,&quot;pathway_type&quot;) aa &lt;- rbind(kegg_pathway1,pathway_type_1) dat2 &lt;- dat %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Urea Cycle/Amino Group Metabolism&quot;,&quot;Urea Cycle&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Nucleotides&quot;,&quot;Nucleotide Interconversion&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Citric Acid Cycle&quot;,&quot;TCA Cycle&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Citrate Cycle (Tca Cycle)&quot;,&quot;TCA Cycle&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;The Citric Acid (Tca) Cycle And Respiratory Electron Transport&quot;,&quot;TCA Cycle&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(grepl(&quot;Vitamin&quot;,subsystems),&quot;Vitamin Metabolism&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(grepl(&quot;Tca Cycle&quot;,subsystems),&quot;TCA Cycle&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(grepl(&quot;Amino Acid&quot;,subsystems),&quot;Amino Acid Metabolism&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(grepl(&quot;Coa &quot;,subsystems),&quot;CoA Metabolism&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(grepl(&quot;Fatty Acid&quot;,subsystems),&quot;Fatty Acid Metabolism&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Fatty Acid Oxidation&quot;,&quot;Fatty Acid Metabolism&quot;,subsystems)) %&gt;% dplyr::mutate(subsystems=ifelse(subsystems==&quot;Aminosugar Metabolism&quot;,&quot;Amino Sugar Metabolism&quot;,subsystems)) %&gt;% unique() %&gt;% dplyr::left_join(aa,by=&quot;subsystems&quot;) write.table(dat2,&quot;/Users/guituantuan/Desktop/projects/database/gene-metabolite/gene-metabolite_BiGG_graphite_uniq.txt&quot;, quote=F,row.names=F,sep=&quot;\\t&quot;) "],["example-unique-analyses.html", "Chapter 3 Example-unique analyses 3.1 Loading the data 3.2 Pathway enrichment analysis 3.3 Pathway differential abundance score 3.4 ESEA Metabolite Set Enrichment Analysis 3.5 Subnetwork", " Chapter 3 Example-unique analyses 3.1 Loading the data The case study is an integrated metabolic and transcriptional analysis to understand the rapidly proliferating breast cancers (Liao, et al., 2022). In this paper, the authors characterized the metabolomic profile of two types of 31 breast tumors in human to uncovered pyrimidine metabolism and glutaminolysis pathways are elevated in TNBC. As an example of mixed metabolites and genes analyses, here we are going to use both the dataset of metabolite and gene expression data as reported in the paper. The metabolomics data was accessed from the Supplementary Tables S2 in the paper, and the gene expression data is from the author. They found that pyrimidine and purine metabolism, carbon metabolism, and the energy production related pathways were highly enriched in Cluster 2 while many lipid/fatty acid metabolism related pathways were enriched in Cluster 1. We will use MNet to identify a set of features whose activity changes significantly between the two sample clusters.This result will hopefully hint at some specific biological activities that are pathologically altered in tumoral samples. library(dplyr) library(MNet) library(stringr) library(ggplot2) library(RColorBrewer) dir.create(&quot;result&quot;) dir.create(&quot;result/unique&quot;) dir.create(&quot;result/routine&quot;) group[which(group==&quot;normal&quot;)] &lt;- &quot;a&quot; group[which(group==&quot;tumor&quot;)] &lt;- &quot;normal&quot; group[which(group==&quot;a&quot;)] &lt;- &quot;tumor&quot; all_meta &lt;- mlimma(meta_dat,group) all_gene &lt;- mlimma(gene_dat,group) head(all_meta) ## # A tibble: 6 × 8 ## logFC AveExpr t P.Value adj.P.Val B logP name ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 -2.86 22.6 -9.25 1.52e-10 0.0000000332 14.1 7.48 C02045 ## 2 -2.44 26.2 -7.80 6.83e- 9 0.000000748 10.4 6.13 C00267 ## 3 1.82 27.1 6.80 1.10e- 7 0.00000622 7.64 5.21 C00073 ## 4 3.78 20.9 6.79 1.14e- 7 0.00000622 7.61 5.21 C05674 ## 5 2.20 21.4 6.58 2.07e- 7 0.00000907 7.02 5.04 C00255 ## 6 2.37 21.6 6.45 2.98e- 7 0.0000109 6.66 4.96 C00242 head(all_gene) ## # A tibble: 6 × 8 ## logFC AveExpr t P.Value adj.P.Val B logP name ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 -6.92 23.1 -11.3 1.15e-12 0.0000000203 17.7 7.69 APH1B ## 2 -21.4 23.4 -10.6 5.13e-12 0.0000000455 16.5 7.34 GFRA1 ## 3 5.76 24.4 10.1 1.85e-11 0.0000000891 15.4 7.05 RFC4 ## 4 -10.5 14.8 -10.1 2.01e-11 0.0000000891 15.3 7.05 FAM47E ## 5 10.8 20.6 9.79 3.85e-11 0.000000137 14.7 6.86 ORC6 ## 6 -4.02 5.65 -9.69 4.98e-11 0.000000147 14.5 6.83 FAM87B 3.2 Pathway enrichment analysis 3.2.1 gene pathway enrichment KEGG metabolic pathway-based pathway enrichment (PE) analysis to investigate the dysregulation of metabolic pathways considering genes. ## gene diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_increase &lt;- PathwayAnalysis(diff_gene_increase$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/01.gene_increase.pdf&quot;,result_gene_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/01.gene_increase.png&quot;,result_gene_increase$p_barplot,width=10,height = 5) write.table(result_gene_increase$output,&quot;result/unique/01.gene_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_decrease &lt;- PathwayAnalysis(diff_gene_decrease$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/01.gene_decrease.pdf&quot;,result_gene_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/01.gene_decrease.png&quot;,result_gene_decrease$p_barplot,width=10,height = 5) write.table(result_gene_decrease$output,&quot;result/unique/01.gene_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) Gene_increase and Gene_decrease pathway enrichment 3.2.2 metabolite pathway enrichment KEGG metabolic pathway-based pathway enrichment (PE) analysis to investigate the dysregulation of metabolic pathways considering metabolites. ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_meta_increase &lt;- PathwayAnalysis(diff_meta_increase$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/02.meta_increase.pdf&quot;,result_meta_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/02.meta_increase.png&quot;,result_meta_increase$p_barplot,width=10,height = 5) write.table(result_meta_increase$output,&quot;result/unique/02.meta_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_meta_decrease &lt;- all_meta %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_meta_decrease &lt;- PathwayAnalysis(diff_meta_decrease$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/02.meta_decrease.pdf&quot;,result_meta_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/02.meta_decrease.png&quot;,result_meta_decrease$p_barplot,width=10,height = 5) write.table(result_meta_decrease$output,&quot;result/unique/02.meta_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) Metabolite_increase and Metabolite_decrease pathway enrichment 3.2.3 Extended pathway enrichment KEGG metabolic pathway-based extended pathway enrichment analysis (EPEA) to investigate the dysregulation of metabolic pathways considering both metabolites and genes using the function ‘PathwayAnalysis’. ## gene and metabolite diff_increase &lt;- rbind(diff_gene_increase,diff_meta_increase) result_all_increase &lt;- PathwayAnalysis(diff_increase$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/03.all_increase.pdf&quot;,result_all_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/03.all_increase.png&quot;,result_all_increase$p_barplot,width=10,height = 5) write.table(result_all_increase$output,&quot;result/unique/03.all_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_decrease &lt;- rbind(diff_gene_decrease,diff_meta_decrease) result_all_decrease &lt;- PathwayAnalysis(diff_decrease$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/unique/03.all_decrease.pdf&quot;,result_all_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/unique/03.all_decrease.png&quot;,result_all_decrease$p_barplot,width=10,height = 5) write.table(result_all_decrease$output,&quot;result/unique/03.all_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) Extended pathway enrichment(increase and decrease) 3.2.4 Overview of pathway enrichment analysis meta_increase &lt;- data.table::fread(&quot;result/unique/02.meta_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;meta_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;metabolite&quot;) meta_decrease &lt;- data.table::fread(&quot;result/unique/02.meta_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;meta_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;metabolite&quot;) gene_increase &lt;- data.table::fread(&quot;result/unique/01.gene_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;gene_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;gene&quot;) gene_decrease &lt;- data.table::fread(&quot;result/unique/01.gene_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;gene_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;gene&quot;) all_increase &lt;- data.table::fread(&quot;result/unique/03.all_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;all_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;all&quot;) all_decrease &lt;- data.table::fread(&quot;result/unique/03.all_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;all_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;all&quot;) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_meta &lt;- rbind(meta_increase,meta_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.01) result_gene &lt;- rbind(gene_increase,gene_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.05) result_all &lt;- rbind(all_increase,all_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.05) result &lt;- rbind(result_meta,result_gene,result_all) %&gt;% dplyr::filter(!name %in% c(&quot;Sulfur metabolism&quot;,&quot;Fructose and mannose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Butanoate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;, &quot;Amino sugar and nucleotide sugar metabolism&quot;,&quot;Propanoate metabolism&quot;)) %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;name&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::arrange(pvalue) pathway_hh &lt;- unique(result$pathway_type) result &lt;- result %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;,&quot;Biosynthesis of other secondary metabolites&quot;,&quot;Metabolism of other amino acids&quot;)) %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result$name &lt;- factor(result$name,levels = rev(unique(result$name))) result$pathway_type &lt;- factor(result$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result$type1 &lt;- factor(result$type1,levels=c(&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;, &quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) p1 &lt;- ggplot(result,aes(name,-log10(pvalue)))+ geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ coord_flip()+ facet_grid(. ~ type1,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL) #p1 ggsave(&quot;result/unique/04.epe-v0102.pdf&quot;,p1,width=15,height = 7) ggsave(&quot;result/unique/04.epe-v0102.png&quot;,p1,width=15,height = 7) 3.3 Pathway differential abundance score 3.3.1 gene differential abundance score KEGG metabolic pathway-based differential abundance (DA) analysis investigate the dysregulation of metabolic pathways considering only genes. diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 2) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -2) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) DAscore_gene &lt;- DAscore(diff_gene_increase$name,diff_gene_decrease$name,all_gene$name, min_measured_num = 10,out=&quot;gene&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/unique/05.DA_gene.pdf&quot;,DAscore_gene$p,width=10,height = 8) ggsave(&quot;result/unique/05.DA_gene.png&quot;,DAscore_gene$p,width=10,height = 8) write.table(DAscore_gene$result,&quot;result/unique/05.DA_gene.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 3.3.2 metabolite differential abundance score KEGG metabolic pathway-based differential abundance (DA) analysis investigate the dysregulation of metabolic pathways considering only metabolites. ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta %&gt;% dplyr::filter(logFC &gt; 2) %&gt;% dplyr::filter(P.Value &lt; 0.01) diff_meta_decrease &lt;- all_meta %&gt;% dplyr::filter(logFC &lt; 2) %&gt;% dplyr::filter(P.Value &lt; 0.01) DAscore_meta &lt;- DAscore(diff_meta_increase$name,diff_meta_decrease$name,all_meta$name, min_measured_num = 3,out=&quot;metabolite&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/unique/06.DA_meta.pdf&quot;,DAscore_meta$p,width=10,height = 8) ggsave(&quot;result/unique/06.DA_meta.png&quot;,DAscore_meta$p,width=10,height = 8) write.table(DAscore_meta$result,&quot;result/unique/06.DA_meta.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 3.3.3 Extended pathway differential abundance score KEGG metabolic pathway-based extended differential abundance (EDA) analysis investigate the dysregulation of metabolic pathways considering both metabolites and genes. ## gene and metabolite DAscore_all &lt;- DAscore(c(diff_gene_increase$name,diff_meta_increase$name), c(diff_gene_decrease$name,diff_meta_decrease$name), c(all_gene$name,all_meta$name),min_measured_num = 13, out=&quot;Extended&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/unique/07.DA_all.pdf&quot;,DAscore_all$p,width=10,height = 10) ggsave(&quot;result/unique/07.DA_all.png&quot;,DAscore_all$p,width=10,height = 10) write.table(DAscore_all$result,&quot;result/unique/07.DA_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 3.3.4 Overview of pathway differential abundance score meta &lt;- data.table::fread(&quot;result/unique/06.DA_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::mutate(Type=&quot;metabolite&quot;) gene &lt;- data.table::fread(&quot;result/unique/05.DA_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::mutate(Type=&quot;gene&quot;) all &lt;- data.table::fread(&quot;result/unique/07.DA_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 13) %&gt;% dplyr::mutate(Type=&quot;all&quot;) result &lt;- rbind(meta,gene,all) %&gt;% dplyr::filter(!Pathway %in% c(&quot;Sulfur metabolism&quot;,&quot;Fructose and mannose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Butanoate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;,&quot;Starch and sucrose metabolism&quot;, &quot;Amino sugar and nucleotide sugar metabolism&quot;,&quot;Propanoate metabolism&quot;,&quot;Inositol phosphate metabolism&quot;, &quot;Tryptophan metabolism&quot;, &quot;Selenocompound metabolism&quot;)) %&gt;% dplyr::filter(!`Pathway Category` %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Xenobiotics biodegradation and metabolism&quot;, &quot;Glycan biosynthesis and metabolism&quot;,&quot;Metabolism of other amino acids&quot;)) result_filter &lt;- result %&gt;% dplyr::arrange(DA_score) %&gt;% dplyr::arrange(`Pathway Category`) result_filter$Pathway &lt;- factor(result_filter$Pathway,levels=unique(result_filter$Pathway)) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;metabolite&quot;, &quot;gene&quot;,&quot;all&quot;)) p &lt;- ggplot2::ggplot(result_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ ggplot2::coord_flip()+ # ggplot2::ylab(&quot;DA score&quot;)+ ggplot2::xlab(NULL)+ ggplot2::theme_bw()+ facet_grid(. ~ Type,scales=&quot;free_x&quot;) ggsave(&quot;result/unique/08.DA-v0102.pdf&quot;,p,width=18,height = 7) ggsave(&quot;result/unique/08.DA-v0102.png&quot;,p,width=18,height = 7) 3.4 ESEA Metabolite Set Enrichment Analysis The metabolite set enrichment analysis using function “ESEA”. all_result &lt;- rbind(all_meta,all_gene) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta$logFC names(meta) &lt;- all_meta$name result_meta &lt;- ESEA(meta,out=&quot;metabolite&quot;,minSize = 3) result_gene &lt;- ESEA(gene,out = &quot;gene&quot;,minSize = 10) result_all &lt;- ESEA(all,out=&quot;Extended&quot;,minSize = 13) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_meta_filter &lt;- result_meta %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;)) result_gene_filter &lt;- result_gene %&gt;% dplyr::filter(pval &lt; 0.2) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;)) result_all_filter &lt;- result_all %&gt;% dplyr::filter(pval &lt; 0.2) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) result &lt;- rbind(result_meta_filter,result_gene_filter,result_all_filter) result_filter &lt;- result %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;pathway&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Xenobiotics biodegradation and metabolism&quot;,&quot;Metabolism of other amino acids&quot;)) %&gt;% dplyr::arrange(pval) pathway_hh &lt;- unique(result_filter$pathway_type) result_filter &lt;- result_filter %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result_filter$pathway &lt;- factor(result_filter$pathway,levels = rev(unique(result_filter$pathway))) result_filter$pathway_type &lt;- factor(result_filter$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;, &quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) p &lt;- ggplot(result_filter,aes(pathway,-log10(pval))) + geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ facet_grid(. ~ Type,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL)+ coord_flip() ggsave(&quot;result/unique/09.ESEA_facet.pdf&quot;,p,width=15,height = 7) ggsave(&quot;result/unique/09.ESEA_facet.png&quot;,p,width=15,height = 7) The MSEA plot of interested pathway. all_meta &lt;- mlimma(meta_dat,group) %&gt;% dplyr::arrange(logFC) all_gene &lt;- mlimma(gene_dat,group) %&gt;% dplyr::arrange(logFC) all_result &lt;- rbind(all_meta,all_gene) %&gt;% dplyr::arrange(logFC) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta$logFC names(meta) &lt;- all_meta$name p1 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,gene,out=&quot;gene&quot;) ggsave(&quot;result/unique/10.plot_msea_oxipho_gene.pdf&quot;,p1,width=5,height = 5) ggsave(&quot;result/unique/10.plot_msea_oxipho_gene.png&quot;,p1,width=5,height = 5) p2 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,meta,out=&quot;metabolite&quot;) ggsave(&quot;result/unique/10.plot_msea_oxipho_metabolite.pdf&quot;,p2,width=5,height = 5) ggsave(&quot;result/unique/10.plot_msea_oxipho_metabolite.png&quot;,p2,width=5,height = 5) p3 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,all,out=&quot;Extended&quot;) ggsave(&quot;result/unique/10.plot_msea_oxipho_all.pdf&quot;,p3,width=5,height = 5) ggsave(&quot;result/unique/10.plot_msea_oxipho_all.png&quot;,p3,width=5,height = 5) p &lt;- pMSEA(&quot;Fatty acid biosynthesis&quot;,meta,out=&quot;metabolite&quot;) ggsave(&quot;result/unique/10.plot_msea_Fatty acid biosynthesis_metabolite.pdf&quot;,p,width=5,height = 5) ggsave(&quot;result/unique/10.plot_msea_Fatty acid biosynthesis_metabolite.png&quot;,p,width=5,height = 5) 3.5 Subnetwork library(dplyr) library(MNet) diff_meta &lt;- mlimma(meta_dat,group) diff_gene &lt;- mlimma(gene_dat,group) names(diff_meta)[4] &lt;- &quot;p_value&quot; names(diff_gene)[4] &lt;- &quot;p_value&quot; pdf(&quot;result/unique/11.pdent.pdf&quot;,width=12,height = 10) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() png(&quot;result/unique/11.pdent.png&quot;,width=1000,height = 800) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() node &lt;- a$node_result write.table(node,&quot;result/unique/11.pdnet_node.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) edge &lt;- a$edge_result write.table(edge,&quot;result/unique/11.pdnet_edge.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) metabolite &lt;- node %&gt;% dplyr::filter(type==&quot;metabolite&quot;) gene &lt;- node %&gt;% dplyr::filter(type==&quot;gene&quot;) result_metabolite &lt;- PathwayAnalysis(metabolite$name,out=&quot;metabolite&quot;,test=&quot;hypergeo&quot;) result_gene &lt;- PathwayAnalysis(gene$name,out=&quot;gene&quot;,test=&quot;hypergeo&quot;) result_all &lt;- PathwayAnalysis(c(gene$name,metabolite$name),out=&quot;Extended&quot;,test=&quot;hypergeo&quot;) write.table(result_metabolite$output,&quot;result/unique/11.pdnet_metabolite_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(result_gene$output,&quot;result/unique/11.pdnet_gene_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(result_all$output,&quot;result/unique/11.pdnet_all_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result &lt;- rbind(result_metabolite$output %&gt;% dplyr::mutate(type=&quot;metabolite&quot;), result_gene$output %&gt;% dplyr::mutate(type=&quot;gene&quot;), result_all$output %&gt;% dplyr::mutate(type=&quot;all&quot;)) %&gt;% # dplyr::filter(nOverlap &gt; 1) %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;name&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::filter(!name %in% c(&quot;Fructose and mannose metabolism&quot;,&quot;Amino sugar and nucleotide sugar metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;)) %&gt;% dplyr::arrange(pvalue) pathway_hh &lt;- unique(result$pathway_type) result &lt;- result %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Metabolism of other amino acids&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;)) %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result$name &lt;- factor(result$name,levels = rev(unique(result$name))) result$pathway_type &lt;- factor(result$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result$type &lt;- factor(result$type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;)) p1 &lt;- ggplot(result,aes(name,-log10(pvalue)))+ geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ coord_flip()+ facet_grid(. ~ type,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL) ggsave(&quot;result/unique/11.pdnet_epe.pdf&quot;,p1,width=10,height = 5) ggsave(&quot;result/unique/11.pdnet_epe.png&quot;,p1,width=10,height = 5) "],["example-rountine-analyses.html", "Chapter 4 Example-rountine analyses 4.1 Metabolite and kegg name change 4.2 Group-wise analyses 4.3 Pathway analysis 4.4 Clinical analysis", " Chapter 4 Example-rountine analyses 4.1 Metabolite and kegg name change 4.1.1 Metabolite name changed to refmet name This step requires networking. RefMet: A Reference list of Metabolite names. The main objective of RefMet is to provide a standardized reference nomenclature for both discrete metabolite structures and metabolite species identified by spectroscopic techniques in metabolomics experiments. compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) refmetid_result &lt;- name2refmet(compound_name) write.table(refmetid_result,&quot;result/routine/01.refmetid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Input_name Refmet_name Formula Super_class ## 1 2-Hydroxybutyric acid 2-Hydroxybutyric acid C4H8O3 Fatty Acyls ## 2 1-Methyladenosine 1-Methyladenosine C11H15N5O4 Nucleic acids ## 3 tt tt &lt;NA&gt; &lt;NA&gt; ## 4 2-Aminooctanoic acid 2-Aminocaprylic acid C8H17NO2 Fatty Acyls ## Main_class Sub_class ## 1 Fatty acids Hydroxy FA ## 2 Purines Purine ribonucleosides ## 3 &lt;NA&gt; &lt;NA&gt; ## 4 Fatty acids Amino FA 4.1.2 Metabolite name changed to kegg id This step requires networking. Search the KEGG ID corresponding to the metabolites name. compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) keggid_result &lt;- name2keggid(compound_name) %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) %&gt;% tibble::as_tibble() write.table(keggid_result,&quot;result/routine/02.keggid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Name KEGG_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; 4.1.3 Metabolite name corresponding to kegg pathway This step requires networking. Search the KEGG pathway corresponding to the metabolite name. compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) result_all &lt;- name2pathway(compound_name) ##### the output is the each metabolite related pathway result_name2pathway &lt;- result_all$name2pathway write.table(result_name2pathway,&quot;result/routine/03.name2pathway_keggpathway.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2keggid &lt;- result_all$kegg_id write.table(result_name2keggid,&quot;result/routine/03.name2pathway_keggid.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2enrichpathway &lt;- result_all$pathway write.table(result_name2enrichpathway,&quot;result/routine/03.name2pathway_pathwayenrich.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Name KEGG_id Pathway Pathway_category ## 1 2-Hydroxybutyric acid C05984 Propanoate metabolism Carbohydrate metabolism ## Pathway_id ## 1 hsa00640 ## Name KEGG_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; ## name nAnno nOverlap fc zscore pvalue adjp or CIl CIu ## 1 Propanoate metabolism 40 1 76.1 8.66 0 0 Inf 1.93 Inf ## distance namespace members_Overlap ## 1 1 Customised C05984 ## members_Anno ## 1 C00024, C00042, C00068, C00083, C00091, C00099, C00100, C00109, C00111, C00163, C00186, C00222, C00424, C00479, C00546, C00583, C00683, C00804, C00827, C00894, C01013, C01213, C02170, C02225, C02335, C02876, C04225, C04593, C05235, C05668, C05979, C05983, C05984, C05989, C06002, C15972, C15973, C21017, C21018, C21250 ## members_Overlap_name ## 1 2-Hydroxybutanoic acid ## members_Anno_name ## 1 Acetyl-CoA;Succinate;Thiamin diphosphate;Malonyl-CoA;Succinyl-CoA;beta-Alanine;Propanoyl-CoA;2-Oxobutanoate;Glycerone phosphate;Propanoate;(S)-Lactate;3-Oxopropanoate;(S)-Lactaldehyde;Propanal;Methylglyoxal;Propane-1,2-diol;(S)-Methylmalonyl-CoA;Propynoate;Lactoyl-CoA;Propenoyl-CoA;3-Hydroxypropanoate;(R)-Methylmalonyl-CoA;Methylmalonate;2-Methylcitrate;beta-Alanyl-CoA;Propanoyl phosphate;(Z)-But-2-ene-1,2,3-tricarboxylate;(2S,3R)-3-Hydroxybutane-1,2,3-tricarboxylate;Hydroxyacetone;3-Hydroxypropionyl-CoA;Propane-1-ol;Propionyladenylate;2-Hydroxybutanoic acid;3-Oxopropionyl-CoA;(S)-Methylmalonate semialdehyde;Enzyme N6-(lipoyl)lysine;Enzyme N6-(dihydrolipoyl)lysine;2-(alpha-Hydroxypropyl)thiamine diphosphate;Enzyme N6-(S-propyldihydrolipoyl)lysine;2-Methyl-trans-aconitate 4.1.4 Metabolite keggid to kegg pathway library(MNet) keggid &lt;- c(&quot;C05984&quot;,&quot;C02494&quot;) ##### the output is the each metabolite related pathway keggpathway_result &lt;- keggid2pathway(keggid) head(keggpathway_result) ## # A tibble: 1 × 5 ## ENTRY NAME PATHWAY pathway_type V2 ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 C05984 2-Hydroxybutanoic acid;///2-Hydroxybutyrate… Propan… Carbohydrat… hsa0… 4.1.5 The pathway information result &lt;- pathwayinfo(&quot;hsa00630&quot;) result &lt;- pathwayinfo(&quot;Glyoxylate and dicarboxylate metabolism&quot;) result$gene_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname ## 1 gene ACSS1 hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 gene ACSS2 hsa00630 Glyoxylate and dicarboxylate metabolism ## kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism result$compound_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname ## 1 metabolite C00007 hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 metabolite C00011 hsa00630 Glyoxylate and dicarboxylate metabolism ## kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism 4.1.6 Pathway name to pathway id pathwayid &lt;- pathway2pathwayid(&quot;Glycolysis / Gluconeogenesis&quot;) pathwayid ## PATHWAY pathwayid ## 1 Glycolysis / Gluconeogenesis hsa00010 4.2 Group-wise analyses 4.2.1 PCA plot PCA of the data. ### the pca plot p_PCA &lt;- pPCA(meta_dat,group) ggsave(&quot;result/routine/04.PCA_1.pdf&quot;,p_PCA$p1,height = 6,width = 6) ggsave(&quot;result/routine/04.PCA_2.pdf&quot;,p_PCA$p2,height = 6,width = 6) ggsave(&quot;result/routine/04.PCA_3.pdf&quot;,p_PCA$p3,height = 10,width = 10) ggsave(&quot;result/routine/04.PCA_1.png&quot;,p_PCA$p1,height = 6,width = 6) ggsave(&quot;result/routine/04.PCA_2.png&quot;,p_PCA$p2,height = 6,width = 6) ggsave(&quot;result/routine/04.PCA_3.png&quot;,p_PCA$p3,height = 10,width = 10) 4.2.2 Differnetial metabolite analysis 4.2.2.1 Using the function mlimma in R packages “MNet” diff_result &lt;- mlimma(meta_dat,group) 4.2.2.2 Using the function DM in R packages “MNet” diff_result &lt;- DM(2**meta_dat,group) dev.off() write.table(diff_result,&quot;result/routine/05.DM_result.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## filter the differential metabolites by default fold change &gt;1.5 or &lt; 1/1.5 ,Padj_wilcox &lt; 0.05 and VIP&gt;1 diff_result_filter &lt;- diff_result %&gt;% dplyr::filter(Fold_change &gt;1.3 | Fold_change &lt; 1/1.3) %&gt;% dplyr::filter(Padj_wilcox&lt;0.1) %&gt;% dplyr::filter(VIP&gt;0.8) utils::write.table(diff_result,&quot;result/routine/05.all_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) utils::write.table(diff_result_filter,&quot;result/routine/05.diff_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 4.2.3 Differential metabolites’ volcano The volcano plot of metabolites using the function “pVolcano” in the package “MNet”. p_volcano &lt;- pVolcano(diff_result,foldchange=1.5) #p_volcano ggsave(&quot;result/routine/06.volcano.pdf&quot;,p_volcano,height = 3,width = 4) ggsave(&quot;result/routine/06.volcano.png&quot;,p_volcano,height = 3,width = 4) 4.2.4 Differential metabolites’ heatmap The heatmap plot of differentital metabolites using the function “pHeatmap” in R package “MNet”. meta_dat_diff &lt;- meta_dat[rownames(meta_dat) %in% diff_result_filter$Name,] p_heatmap &lt;- pHeatmap(meta_dat_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=&quot;ward.D&quot;,clustering_distance_cols=&quot;correlation&quot;) ggsave(&quot;result/routine/07.heatmap.pdf&quot;,p_heatmap,width=10,height=8) ggsave(&quot;result/routine/07.heatmap.png&quot;,p_heatmap,width=10,height=8) 4.2.5 Differential metabolites’ zscore The zscore plot of differentital metabolites using the function “pZscore” in R package “MNet”. p_zscore &lt;- pZscore(meta_dat_diff,group) #p_zscore ggsave(&quot;result/routine/08.z_score.pdf&quot;,p_zscore,width=6,height=8) ggsave(&quot;result/routine/08.z_score.png&quot;,p_zscore,width=6,height=8) 4.3 Pathway analysis 4.3.1 Pathview only metabolite library(pathview) kegg_id &lt;- c(&quot;C02494&quot;,&quot;C03665&quot;,&quot;C01546&quot;,&quot;C05984&quot;,&quot;C14088&quot;,&quot;C00587&quot;) value &lt;- c(-0.3824620,0.1823628,-1.1681486,0.5164899,1.6449798,-0.7340652) names(value) &lt;- kegg_id cpd.data &lt;- value gene_name &lt;- c(&quot;LDHA&quot;,&quot;BCKDHB&quot;,&quot;PCCA&quot;,&quot;ACSS1&quot;) gene_value &lt;- c(1,0.5,-1,-1) names(gene_value) &lt;- gene_name pPathview(cpd.data,outdir=&quot;result/routine/path_meta&quot;) 4.3.2 Pathview metabolite and gene pPathview(cpd.data=cpd.data,gene.data=gene_value,outdir=&quot;result/routine/path_meta-gene&quot;) 4.4 Clinical analysis 4.4.1 Time series of clinical The column contains the time, group, clinical index(such as ALT), low and high. clinical_index[1:5,] time_series_ALT &lt;- pCliTS(clinical_index,&quot;ALT&quot;) ggsave(&quot;result/routine/09.clinical_time_series.pdf&quot;,time_series_ALT,height = 4,width = 5) ggsave(&quot;result/routine/09.clinical_time_series.png&quot;,time_series_ALT,height = 4,width = 5) 4.4.2 Survival analysis library(survival) names(aml)[3] =&quot;group&quot; p=survCli(aml) pdf(&quot;result/routine/10.survival.pdf&quot;,height = 6,width = 6, onefile = F) p dev.off() png(&quot;result/routine/10.survival.png&quot;,height = 600,width = 600) p dev.off() 4.4.3 Metabolites’ survival plot metabolites &lt;- c(&quot;C03819&quot;,&quot;C02918&quot;,&quot;C03916&quot;) survMet(dat_surv,metabolites,cluster_method=&quot;mean&quot;,out_dir=&quot;result/routine/survival/&quot;) 4.4.4 Cox analysis result &lt;- MetCox(dat_surv) write.table(result,&quot;result/routine/11.clinical_cox.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names = F) "],["shiny.html", "Chapter 5 Shiny 5.1 Tencent log 5.2 Shiny app log", " Chapter 5 Shiny 5.1 Tencent log #------------------------------------------------------------------------------- # Step1 Install R #------------------------------------------------------------------------------- sudo apt-get install r-base-core #------------------------------------------------------------------------------- # Step2 Install packages #------------------------------------------------------------------------------- ## Use R to install packages install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;shiny&quot;) ## Install shiny-sever sudo apt-get install gdebi-core wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.14.948-amd64.deb sudo gdebi shiny-server-1.5.14.948-amd64.deb #------------------------------------------------------------------------------- # Step3 Set shiny sever #------------------------------------------------------------------------------- # check the condition of shiny sever sudo systemctl status shiny-server.service # After the end, the shiny user will appear, set the shiny user password ## Firstly, switch to root mode sudo -i ## Then, set the password sudo passwd shiny ## Third, add groups sudo groupadd shiny-apps sudo usermod -aG shiny-apps shiny sudo usermod -aG shiny-apps ubuntu ## Fourth, change the owner of the specified file to the specified user or group sudo chown -R shiny:shiny-apps /srv/shiny-server sudo chmod g+w /srv/shiny-server sudo chmod g+s /srv/shiny-server ## Fifth, go to shiny user su - shiny #------------------------------------------------------------------------------- # Step4 Configure .Rprofile #------------------------------------------------------------------------------- vi .Rrofile #------------------------------------------------------------------------------- # Step5 Configure .Renviron #------------------------------------------------------------------------------- vi .Renviron R_LIBS=/home/shiny/R_Library #------------------------------------------------------------------------------- # Step6 Install R packages #------------------------------------------------------------------------------- install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;remotes&quot;) BiocManager::install(&quot;shiny&quot;) BiocManager::install(&quot;ggplot2&quot;) BiocManager::install(&quot;dplyr&quot;) library(shiny) library(ggplot2) library(dplyr) remotes::install_github(&quot;Github-Yilei/ggcor&quot;) remotes::install_github(&quot;hfang-bristol/XGR&quot;) remotes::install_github(&quot;tuantuangui/MNet&quot;) #------------------------------------------------------------------------------- # Step7 Shiny sets port 3838 #------------------------------------------------------------------------------- #------------------------------------------------------------------------------- # Step8 cp the shiny project folders to /srv/shiny-server/ #------------------------------------------------------------------------------- cp -r MNet/ /srv/shiny-server/ sudo chown R shiny:shiny MNet/ #------------------------------------------------------------------------------- # Step9 Restart shiny server #------------------------------------------------------------------------------- sudo systemctl restart shiny-server.service ## If an error occurs, check the log file /var/log/shiny-server/ ##If successful it displays the following contents http:/124.221.255.21:3838/MNet www.mnet.vip 5.2 Shiny app log 您可以将开发好的Shiny APP部署在自己的服务器上，或是将其部署在公共的平台（即shinyapps.io）上。这里仅分享后者。对于如何将Shiny APP部署到自己的服务器中，将在未来进行补充。 部署至shinyapps.io平台操作步骤: #------------------------------------------------------------------------------- # Step1 在shinyapps.io官网上注册账号。您会被要求填写用户名 #------------------------------------------------------------------------------- #------------------------------------------------------------------------------- # Step2 重新打开shinyapps.io官网，单击右上角Dashboard按钮（图1）。进入Dashboard界面（图2）后，单击左侧边栏Acccount &gt; Tokens。您将在右侧主面板中看到Token和Secret信息。单击“Show”按钮，弹出对话框。 #----------------------------------------------------------------------------- #------------------------------------------------------------------------------- # Step3 不要关闭该网页。现假设您的APP名称是&quot;myapp&quot;。在本地的文件浏览器中新建一个文件夹，名为&quot;myapp&quot;。确保该文件夹中有“app.R”文件，并且&quot;app.R&quot;文件的末尾要有shinyApp函数（或能返回与shinyApp函数相同类型的对象的函数）。 #----------------------------------------------------------------------------- #------------------------------------------------------------------------------- # Step4 用RStudio打开文件&quot;app.R&quot;。在命令行窗口中输入runApp()。这一步称为本地测试。若您的Shiny APP成功运行，方可进行下一步。 #----------------------------------------------------------------------------- #------------------------------------------------------------------------------- # Step5 运行以下代码。若报错提示您未安装某些包，则采用install.package安装相应的包即可。代码运行完成后，会自动弹出一个网页，网页内容即是您的Shiny APP，表明部署完成。 #----------------------------------------------------------------------------- if(!require(rsconnect)) install.packages(&quot;rsconnect&quot;) rsconnect::setAccountInfo(name=&#39;Your Account&#39;, token=&#39;Your Token&#39;, secret=&#39;Your Secret&#39;) #name, token, secret信息来源于Step2网页中的对话框 deployApp() 如果出bug： library(BiocManager) r=BiocManager::repositories() #getOption(&quot;repos&quot;)[[&quot;CRAN&quot;]] = &quot;http://cran.r-project.org&quot; r[6] &lt;- &quot;http://cran.r-project.org&quot; options(repos =r) "],["figure1.html", "Chapter 6 Figure1 6.1 1.1 (A) 6.2 1.2 (B) 6.3 1.3 (C) 6.4 1.4 (D) 6.5 1.5 (E)", " Chapter 6 Figure1 6.1 1.1 (A) 6.1.1 Batch removal dir.create(&quot;result/figure1&quot;) library(dplyr) library(ggplot2) library(MNet) # SERRF校正前 before_normalization_raw &lt;- data.table::fread(&quot;raw_data/test_for_serrf.txt&quot;) %&gt;% as.data.frame() before_normalization &lt;- before_normalization_raw %&gt;% t() %&gt;% as.data.frame() %&gt;% filter(!V4 %in% c(&quot;No&quot;,&quot;label&quot;)) names(before_normalization) &lt;- as.character(before_normalization_raw[,2]) names(before_normalization)[4] &lt;- &quot;sample_id&quot; # pca before_batch &lt;- as.character(before_normalization_raw[1,-c(1,2)]) before_type &lt;- as.character(before_normalization_raw[2,-c(1,2)]) before_sample_id &lt;- as.character(before_normalization_raw[4,-c(1,2)]) dd &lt;- data.frame(type=before_type,batch=before_batch,sample_id=before_sample_id) mydata_pca &lt;- apply(before_normalization[,5:ncol(before_normalization)],2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,type=before_type,batch=before_batch,sample_id=before_sample_id) p1 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=before_batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,length(unique(before_batch))-1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) # SERRF校正后 after_normalization_raw &lt;- read.csv(&quot;raw_data/normalized by - SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(sample=gsub(&quot;X&quot;,&quot;&quot;,sample)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) after_sample_id &lt;- rownames(after_normalization_raw) after_dd &lt;- data.frame(sample_id=after_sample_id) %&gt;% dplyr::left_join(dd,by=&quot;sample_id&quot;) mydata_pca &lt;- apply(after_normalization_raw,2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = cbind(pca$x,after_dd) p2 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) ggsave(&quot;result/figure1/01.pca_raw.pdf&quot;,p1,width=5,height = 3.9) ggsave(&quot;result/figure1/01.pca_normalization.pdf&quot;,p2,width=5,height = 3.9) ggsave(&quot;result/figure1/01.pca_raw.png&quot;,p1,width=5,height = 3.9) ggsave(&quot;result/figure1/01.pca_normalization.png&quot;,p2,width=5,height = 3.9) 6.1.2 Metabolite information compound_name &lt;- c(&quot;2-hydroxybutyric acid&quot;,&quot;1-methyladenosine&quot;,&quot;2-Aminooctanoic&quot;) refmetid_result &lt;- name2refmet(compound_name) write.table(refmetid_result,&quot;result/figure1/02.refmetid_result.txt&quot;,sep = &quot;\\t&quot;,quote = F,row.names = F) 6.1.3 Metabolic pathway information refmet_kegg &lt;- name2keggid(refmetid_result$Refmet_name) result_pathway &lt;- keggid2pathway(refmet_kegg$KEGG_id) result &lt;- refmetid_result %&gt;% dplyr::left_join(refmet_kegg,by=c(&quot;Refmet_name&quot;=&quot;Name&quot;)) %&gt;% dplyr::left_join(result_pathway,by=c(&quot;KEGG_id&quot;=&quot;ENTRY&quot;)) %&gt;% dplyr::select(Input_name,Refmet_name,KEGG_id,PATHWAY,everything()) write.table(result,&quot;result/figure1/03.result_all.txt&quot;,sep = &quot;\\t&quot;,quote = F,row.names = F) 6.1.4 Metabolite and metabolic pathway annotation meta_name &lt;- data.frame(name=substr(rownames(meta_dat),start=1,stop=6)) %&gt;% dplyr::left_join(all_kegg_id,by=c(&quot;name&quot;=&quot;ENTRY&quot;)) %&gt;% dplyr::distinct(name,.keep_all = T) meta_subtype &lt;- name2refmet(meta_name$NAME) write.table(meta_name,&quot;result/figure1/04.annotation_subclass.txt&quot;,quote=F,row.names=F) dd &lt;- meta_subtype %&gt;% dplyr::group_by(Super_class) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(!is.na(Super_class)) %&gt;% dplyr::arrange(desc(n)) dd$Super_class &lt;- factor(dd$Super_class,levels = dd$Super_class) p &lt;- ggplot(dd,aes(Super_class,n,fill=Super_class))+ geom_bar(stat=&quot;identity&quot;)+ theme_bw()+ scale_y_continuous(expand = c(0.01, 0.01))+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) ggsave(&quot;result/figure1/04.annotation.pdf&quot;,width=8,height = 6) ggsave(&quot;result/figure1/04.annotation.png&quot;,width=8,height = 6) d &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% unique() %&gt;% dplyr::group_by(kegg_category) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::arrange(n) d$kegg_category &lt;- factor(d$kegg_category,levels=d$kegg_category) cols &lt;- c(RColorBrewer::brewer.pal(9,&#39;YlOrRd&#39;)[1:2],RColorBrewer::brewer.pal(9,&#39;Reds&#39;)) p1 &lt;- ggplot(d,aes(kegg_category,n,fill=kegg_category))+ geom_bar(stat=&quot;identity&quot;)+ theme_bw()+ scale_y_continuous(expand = c(0.01, 0.01))+ #theme(axis.text.x = element_text(angle = 45, hjust = 1))+ scale_fill_manual(values=cols)+ coord_flip() p1 ggsave(&quot;result/figure1/04.annotation_pathways.pdf&quot;,p1,width=10,height = 6) ggsave(&quot;result/figure1/04.annotation_pathways.png&quot;,p1,width=10,height = 6) 6.2 1.2 (B) 6.2.1 Clinical and metabolite analysis metabolites &lt;- names(dat_surv)[-c(1:2)] survMet(dat_surv[-1,],metabolites,cluster_method=&quot;mean&quot;,out_dir=&quot;result/figure1/survival/&quot;) 6.2.2 Time series analysis names(clinical_index)[3] &lt;- &quot;1-methyladenosine&quot; clinical_index &lt;- clinical_index %&gt;% dplyr::mutate(group=ifelse(group==&quot;A&quot;,&quot;tumor&quot;,&quot;normal&quot;)) time_series_ALT &lt;- pCliTS(clinical_index,&quot;1-methyladenosine&quot;) ggsave(&quot;result/figure1/05.clinical_time_series.pdf&quot;,time_series_ALT,width=7,height = 5) ggsave(&quot;result/figure1/05.clinical_time_series.png&quot;,time_series_ALT,width=7,height = 5) 6.3 1.3 (C) 6.3.1 Dimension reduction &amp; Visualization #------------------------------------------------------------------------------ # limma analysis #------------------------------------------------------------------------------ group &lt;- c(rep(&quot;tumor&quot;,24),rep(&quot;normal&quot;,7)) result_mlimma_all &lt;- mlimma(meta_dat,group) write.table(result_mlimma_all,&quot;result/figure1/result_mlimma_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # PCA #------------------------------------------------------------------------------ p_out &lt;- pPCA(meta_dat,group) ggsave(&quot;result/figure1/06.PCA_p2.pdf&quot;,p_out$p2,width=8,height = 6) ggsave(&quot;result/figure1/06.PCA_p2.png&quot;,p_out$p2,width=5,height = 3.9) #------------------------------------------------------------------------------ # OPLS-PCA #------------------------------------------------------------------------------ pdf(&quot;result/figure1/06.OPLS-DA.pdf&quot;) result_DM_all &lt;- DM(2**meta_dat,group) dev.off() oplsda &lt;- ropls::opls(t(myscale(meta_dat,method=&quot;raw_zscore&quot;)), group, predI = 1, orthoI = 1) sample.score &lt;- data.frame(oplsda@scoreMN,group=group,o1=oplsda@orthoScoreMN[,1], label=rownames(oplsda@scoreMN)) p &lt;- ggplot(sample.score,aes(p1,o1,color=group))+ geom_hline(yintercept=0,linetype=&quot;dashed&quot;,size=0.5)+ geom_vline(xintercept=0,linetype=&quot;dashed&quot;,size=0.5)+ geom_point(size=1.9)+ ggplot2::geom_text(ggplot2::aes(label=label),size=1)+ stat_ellipse()+ scale_color_manual(values =c(&quot;#00599F&quot;,&quot;#D01910&quot;))+ theme_bw()+ labs(x=&quot;p1 (20%)&quot;) #p ggsave(&quot;result/figure1/06.p.opls-da.pdf&quot;,p,width=5,height = 4.5) ggsave(&quot;result/figure1/06.p.opls-da.png&quot;,p,width=5,height = 4.5) 6.3.2 Differential metabolites visualization 6.3.2.1 Volcano plot result_DM_all &lt;- DM(2**meta_dat,group) p_Volcano &lt;- pVolcano(result_DM_all,foldchange_threshold = 1.5,p_threshold = 0.01) ggsave(&quot;result/figure1/07.p_valocano.pdf&quot;,p_Volcano,width=5,height = 4) ggsave(&quot;result/figure1/07.p_valocano.png&quot;,p_Volcano,width=5,height = 4) 6.3.2.2 Heatmap result_mlimma_all &lt;- data.table::fread(&quot;result/figure1/result_mlimma_all.txt&quot;) %&gt;% as.data.frame() result_mlimma_filter &lt;- result_mlimma_all %&gt;% dplyr::filter(abs(logFC) &gt; 1) %&gt;% dplyr::filter(`adj.P.Val` &lt; 0.05) dat_filter &lt;- meta_dat %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% result_mlimma_filter$name) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% head(n=10) pdf(&quot;result/figure1/08.p_heatmap.pdf&quot;,width=5,height = 5) p_heatmap &lt;- MNet::pHeatmap(dat_filter,group,clustering_distance_cols =&quot;manhattan&quot;, clustering_method=&quot;ward.D&quot;,fontsize_row=3) dev.off() png(&quot;result/figure1/08.p_heatmap.png&quot;, width = 9, height = 8, units = &#39;in&#39;, res = 200 ) p_heatmap &lt;- MNet::pHeatmap(dat_filter,group,clustering_distance_cols =&quot;manhattan&quot;, clustering_method=&quot;ward.D&quot;,fontsize_row=3) dev.off() 6.3.2.3 Z-score plot p_Zscore &lt;- pZscore(dat_filter,group) ggsave(&quot;result/figure1/09.p_Zscore.pdf&quot;,p_Zscore,width=3,height = 2) ggsave(&quot;result/figure1/09.p_Zscore.png&quot;,p_Zscore,width=3,height = 2) 6.3.3 Pathway enrichment analyses 6.3.3.1 PEA result_mlimma_all &lt;- data.table::fread(&quot;result/figure1/result_mlimma_all.txt&quot;) %&gt;% as.data.frame() dat_increase &lt;- result_mlimma_all %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_decrease &lt;- result_mlimma_all %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(P.Value &lt; 0.05) kegg_all &lt;- unique(c(dat_increase$name,dat_decrease$name)) pathway_result &lt;- PathwayAnalysis(kegg_all,out=&quot;metabolite&quot;) result &lt;- pathway_result kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() p_cutoff &lt;- 0.0005 result_1 &lt;- result$output %&gt;% dplyr::filter(pvalue &lt; p_cutoff) %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;name&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::arrange(pvalue) pathway_hh &lt;- unique(result_1$pathway_type) result_1 &lt;- result_1 %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result_1$name &lt;- factor(result_1$name,levels = rev(result_1$name)) result_1$pathway_type &lt;- factor(result_1$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) p1 &lt;- ggplot(result_1,aes(name,-log10(pvalue)))+ geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ coord_flip()+ theme_bw()+ labs(x=NULL) p1 ggsave(&quot;result/figure1/10.pathway_enrichment.pdf&quot;,p1,width = 8,height = 5) ggsave(&quot;result/figure1/10.pathway_enrichment.png&quot;,p1,width = 8,height = 5) 6.3.3.2 DA score result_da &lt;- DAscore(dat_increase$name,dat_decrease$name,result_mlimma_all$name,sort_plot = &quot;category&quot;,out=&quot;metabolite&quot; ) result &lt;- result_da$result min_measured_num &lt;- 5 result_filter &lt;- result %&gt;% dplyr::filter(Measured_members_num&gt;=min_measured_num) %&gt;% dplyr::filter(Pathway %in% c(&quot;Histidine metabolism&quot;,&quot;Tyrosine metabolism&quot;, &quot;Citrate cycle (TCA cycle)&quot;,&quot;Pyruvate metabolism&quot;, &quot;Oxidative phosphorylation&quot;,&quot;Sulfur metabolism&quot;, &quot;Glycerophospholipid metabolism&quot;,&quot;Glycerolipid metabolism&quot;, &quot;Biosynthesis of unsaturated fatty acids&quot;,&quot;Fatty acid biosynthesis&quot;, &quot;Pyrimidine metabolism&quot;,&quot;Purine metabolism&quot;)) result_filter &lt;- result_filter %&gt;% dplyr::arrange(DA_score) %&gt;% dplyr::arrange(`Pathway Category`) result_filter$Pathway &lt;- factor(result_filter$Pathway,levels=result_filter$Pathway) pathway_data &lt;- PathwayExtendData %&gt;% dplyr::filter(type==&quot;metabolite&quot;) p &lt;- ggplot2::ggplot(result_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(pathway_data$kegg_category))+ ggplot2::coord_flip()+ # ggplot2::ylab(&quot;DA score&quot;)+ ggplot2::xlab(NULL)+ ggplot2::theme_bw() ggsave(&quot;result/figure1/11.DA_score.pdf&quot;,p,width=7,height = 4) ggsave(&quot;result/figure1/11.DA_score.png&quot;,p,width=7,height = 4) 6.3.3.3 MSEA dd_arrange &lt;- data.table::fread(&quot;result/figure1/result_mlimma_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(logFC) d_logFC &lt;- dd_arrange$logFC names(d_logFC) &lt;- dd_arrange$name result_msea &lt;- MSEA(d_logFC) result_msea &lt;- result_msea %&gt;% dplyr::mutate(leadingEdge=as.character(leadingEdge)) write.table(result_msea,&quot;result/figure1/12.MSEA.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) p_MSEA &lt;- pMSEA(&quot;Pyrimidine metabolism&quot;,d_logFC) ggsave(&quot;result/figure1/12.p_MSEA_pyrimidine.pdf&quot;,p_MSEA,width=5,height = 4) ggsave(&quot;result/figure1/12.p_MSEA_pyrimidine.png&quot;,p_MSEA,width=5,height = 4) 6.4 1.4 (D) 6.4.1 Extended pathway enrichment analysis (EPEA) library(MNet) group[which(group==&quot;normal&quot;)] &lt;- &quot;a&quot; group[which(group==&quot;tumor&quot;)] &lt;- &quot;normal&quot; group[which(group==&quot;a&quot;)] &lt;- &quot;tumor&quot; all_meta &lt;- mlimma(meta_dat,group) all_gene &lt;- mlimma(gene_dat,group) diff_gene &lt;- all_gene %&gt;% dplyr::filter(abs(logFC) &gt; 1) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_meta &lt;- all_meta %&gt;% dplyr::filter(abs(logFC) &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_all &lt;- rbind(diff_gene,diff_meta) result_gene &lt;- PathwayAnalysis(diff_gene$name,out=&quot;gene&quot;,p_cutoff=1.5) result_meta &lt;- PathwayAnalysis(diff_meta$name,out=&quot;metabolite&quot;,p_cutoff=1.5) result_all &lt;- PathwayAnalysis(diff_all$name,out=&quot;Extended&quot;,p_cutoff=1.5) pathway_all &lt;- rbind(result_gene$output,result_meta$output,result_all$output) %&gt;% dplyr::filter(adjp &lt; 0.001) %&gt;% dplyr::pull(name) %&gt;% unique() result_gene_filter &lt;- result_gene$output %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,adjp) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) result_meta_filter &lt;- result_meta$output %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,adjp) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) result_all_filter &lt;- result_all$output %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,adjp) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) all &lt;- rbind(result_gene_filter,result_meta_filter,result_all_filter) %&gt;% dplyr::mutate(adjp=ifelse(adjp &lt; 1.3e-04 ,1.3e-04,adjp)) %&gt;% dplyr::mutate(type=factor(type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;))) p &lt;- ggplot(all,aes(type,name))+ geom_point(aes(size=nOverlap,color=-log10(adjp)))+ theme_bw()+ theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = &quot;black&quot;))+ scale_color_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ labs(x=NULL,y=&quot;Pathway name&quot;) ggsave(&quot;result/figure1/13.EPEA.pdf&quot;,p,width=6,height = 4) ggsave(&quot;result/figure1/13.EPEA.png&quot;,p,width=6,height = 4) 6.4.2 Extended differential abundance (EDA) score meta &lt;- data.table::fread(&quot;result/unique/06.DA_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::mutate(Type=&quot;metabolite&quot;) gene &lt;- data.table::fread(&quot;result/unique/05.DA_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::mutate(Type=&quot;gene&quot;) all &lt;- data.table::fread(&quot;result/unique/07.DA_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 13) %&gt;% dplyr::mutate(Type=&quot;metabolite+gene&quot;) result &lt;- rbind(meta,gene,all) %&gt;% dplyr::filter(!Pathway %in% c(&quot;Sulfur metabolism&quot;,&quot;Fructose and mannose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Butanoate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;,&quot;Starch and sucrose metabolism&quot;, &quot;Amino sugar and nucleotide sugar metabolism&quot;,&quot;Propanoate metabolism&quot;,&quot;Inositol phosphate metabolism&quot;, &quot;Tryptophan metabolism&quot;, &quot;Selenocompound metabolism&quot;)) %&gt;% dplyr::filter(!`Pathway Category` %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Xenobiotics biodegradation and metabolism&quot;, &quot;Glycan biosynthesis and metabolism&quot;,&quot;Metabolism of other amino acids&quot;)) result_filter &lt;- result %&gt;% dplyr::filter(Pathway %in% c(&quot;Sphingolipid metabolism&quot;,&quot;Glycerophospholipid metabolism&quot;, &quot;Fatty acid biosynthesis&quot;,&quot;Glycerolipid metabolism&quot;, &quot;Biosynthesis of unsaturated fatty acids&quot;,&quot;Fatty acid elongation&quot;, &quot;Steroid biosynthesis&quot;,&quot;Purine metabolism&quot;, &quot;Pyrimidine metabolism&quot;,&quot;Histidine metabolism&quot;,&quot;Tyrosine metabolism&quot;)) %&gt;% dplyr::mutate(DA_score=ifelse(Pathway==&quot;Histidine metabolism&quot; &amp; Type==&quot;metabolite&quot;,-0.2, ifelse(Pathway==&quot;Sphingolipid metabolism&quot; &amp; Type==&quot;metabolite&quot;,-0.2,DA_score))) %&gt;% dplyr::arrange(DA_score) %&gt;% dplyr::arrange(`Pathway Category`) result_filter$Pathway &lt;- factor(result_filter$Pathway,levels=unique(result_filter$Pathway)) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;metabolite+gene&quot;)) p &lt;- ggplot2::ggplot(result_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;black&quot;))+ geom_hline(yintercept=c(0))+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ facet_grid(. ~ Type,scales=&quot;free_x&quot;) p ggsave(&quot;result/figure1/14.DA.pdf&quot;,p,width=10,height = 4) ggsave(&quot;result/figure1/14.DA.png&quot;,p,width=10,height = 4) 6.4.3 Extended data set enrichment analysis (ESEA) library(MNet) all_meta &lt;- mlimma(meta_dat,group) all_gene &lt;- mlimma(gene_dat,group) all_result &lt;- rbind(all_meta,all_gene) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta$logFC names(meta) &lt;- all_meta$name result_meta &lt;- ESEA(meta,out=&quot;metabolite&quot;,minSize = 3) result_gene &lt;- ESEA(gene,out = &quot;gene&quot;,minSize = 10) result_all &lt;- ESEA(all,out=&quot;Extended&quot;,minSize = 13) pathway_msea &lt;- rbind(result_meta,result_gene,result_all) %&gt;% dplyr::filter(pval &lt; 0.01) %&gt;% dplyr::pull(pathway) %&gt;% unique() length(pathway_msea) msea_meta_filter &lt;- result_meta %&gt;% dplyr::filter(pathway %in% pathway_msea) %&gt;% dplyr::select(pathway,pval,NES) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) msea_gene_filter &lt;- result_gene %&gt;% dplyr::filter(pathway %in% pathway_msea) %&gt;% dplyr::select(pathway,pval,NES) %&gt;% dplyr::mutate(type=&quot;gene&quot;) msea_all_filter &lt;- result_all %&gt;% dplyr::filter(pathway %in% pathway_msea) %&gt;% dplyr::select(pathway,pval,NES) %&gt;% dplyr::mutate(type=&quot;metabolite+gene&quot;) %&gt;% dplyr::arrange(NES) result &lt;- rbind(msea_meta_filter,msea_gene_filter,msea_all_filter) %&gt;% dplyr::mutate(pval=ifelse(pval &lt; 8.048183e-04,8.048183e-04,pval)) %&gt;% dplyr::mutate(pathway=factor(pathway,levels=msea_all_filter$pathway)) %&gt;% dplyr::mutate(type=factor(type,levels = c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;metabolite+gene&quot;))) p &lt;- ggplot(result,aes(pathway,NES,fill=-log10(pval)))+ geom_bar(stat=&quot;identity&quot;)+ theme_bw()+ geom_hline(yintercept=c(0))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ scale_fill_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ coord_flip()+ facet_grid(. ~ type,scales=&quot;free_x&quot;)+ labs(x=&quot;Pathway name&quot;) ggsave(&quot;result/figure1/15.ESEA_barplot.pdf&quot;,p,width=10,height = 5) ggsave(&quot;result/figure1/15.ESEA_barplot.png&quot;,p,width=10,height = 5) 6.5 1.5 (E) 6.5.1 dbMNet database library(dplyr) library(MNet) diff_meta &lt;- mlimma(meta_dat,group) diff_gene &lt;- mlimma(gene_dat,group) names(diff_meta)[4] &lt;- &quot;p_value&quot; names(diff_gene)[4] &lt;- &quot;p_value&quot; pdf(&quot;result/figure1/16.pdent.pdf&quot;,width=10,height = 10) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() png(&quot;result/figure1/16.pdent.png&quot;,width=1000,height = 1000) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() node &lt;- a$node_result write.table(node,&quot;result/figure1/16.pdnet_node.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) edge &lt;- a$edge_result write.table(edge,&quot;result/figure1/16.pdnet_edge.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) metabolite &lt;- node %&gt;% dplyr::filter(type==&quot;metabolite&quot;) gene &lt;- node %&gt;% dplyr::filter(type==&quot;gene&quot;) result_metabolite &lt;- PathwayAnalysis(metabolite$name,out=&quot;metabolite&quot;,test=&quot;hypergeo&quot;) result_gene &lt;- PathwayAnalysis(gene$name,out=&quot;gene&quot;,test=&quot;hypergeo&quot;) result_all &lt;- PathwayAnalysis(c(gene$name,metabolite$name),out=&quot;Extended&quot;,test=&quot;hypergeo&quot;) write.table(result_metabolite$output,&quot;result/figure1/17.pdnet_metabolite_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(result_gene$output,&quot;result/figure1/17.pdnet_gene_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(result_all$output,&quot;result/figure1/17.pdnet_all_enrichment.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result &lt;- rbind(result_metabolite$output %&gt;% dplyr::mutate(type=&quot;metabolite&quot;), result_gene$output %&gt;% dplyr::mutate(type=&quot;gene&quot;), result_all$output %&gt;% dplyr::mutate(type=&quot;all&quot;)) %&gt;% # dplyr::filter(nOverlap &gt; 1) %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;name&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::filter(!name %in% c(&quot;Fructose and mannose metabolism&quot;,&quot;Amino sugar and nucleotide sugar metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;)) %&gt;% dplyr::arrange(pvalue) pathway_hh &lt;- unique(result$pathway_type) result &lt;- result %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Metabolism of other amino acids&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;)) %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result$name &lt;- factor(result$name,levels = rev(unique(result$name))) result$pathway_type &lt;- factor(result$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result$type &lt;- factor(result$type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;)) p1 &lt;- ggplot(result,aes(name,-log10(pvalue)))+ geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ coord_flip()+ facet_grid(. ~ type,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL) ggsave(&quot;result/figure1/17.pdnet_epe.pdf&quot;,p1,width=10,height = 5) ggsave(&quot;result/figure1/17.pdnet_epe.png&quot;,p1,width=10,height = 5) "],["figure4.html", "Chapter 7 Figure4 7.1 Load data 7.2 mlimma analysis 7.3 EPE analysis 7.4 EDA analysis 7.5 ESEA analysis 7.6 AML EPE analysis 7.7 Volcano plot 7.8 Heatmap 7.9 Subnetwork", " Chapter 7 Figure4 7.1 Load data ## load metabolite data library(dplyr) sample &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/CCLE/Cell_lines_annotations_20181226.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Site_Primary == &quot;haematopoietic_and_lymphoid_tissue&quot;) %&gt;% dplyr::filter(Hist_Subtype1 %in% c(&quot;acute_myeloid_leukaemia&quot;,&quot;acute_lymphoblastic_B_cell_leukaemia&quot;,&quot;acute_lymphoblastic_T_cell_leukaemia&quot;)) %&gt;% dplyr::select(CCLE_ID,Hist_Subtype1) %&gt;% dplyr::mutate(group=ifelse(Hist_Subtype1 %in% c(&quot;acute_lymphoblastic_B_cell_leukaemia&quot;,&quot;acute_lymphoblastic_T_cell_leukaemia&quot;), &quot;acute_lymphoblastic_leukaemia&quot;,Hist_Subtype1)) dat_met &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/CCLE/CCLE_metabolomics_20190502.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-DepMap_ID) %&gt;% dplyr::filter(CCLE_ID %in% sample$CCLE_ID) write.table(dat_met,&quot;/Users/guituantuan/Desktop/R_packages/MNet_CCLE/dat_met.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) write.table(sample,&quot;/Users/guituantuan/Desktop/R_packages/MNet_CCLE/sample_met.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## load gene data library(dplyr) sample &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/CCLE/Cell_lines_annotations_20181226.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Site_Primary == &quot;haematopoietic_and_lymphoid_tissue&quot;) %&gt;% dplyr::filter(Hist_Subtype1 %in% c(&quot;acute_myeloid_leukaemia&quot;,&quot;acute_lymphoblastic_B_cell_leukaemia&quot;,&quot;acute_lymphoblastic_T_cell_leukaemia&quot;)) %&gt;% dplyr::select(CCLE_ID,Hist_Subtype1) %&gt;% dplyr::mutate(group=ifelse(Hist_Subtype1 %in% c(&quot;acute_lymphoblastic_B_cell_leukaemia&quot;,&quot;acute_lymphoblastic_T_cell_leukaemia&quot;), &quot;acute_lymphoblastic_leukaemia&quot;,Hist_Subtype1)) protein &lt;- data.table::fread(&quot;~/Desktop/projects/RNA-seq/ALL/result_v0612/1_expression/gene.id.v38.txt&quot;,header=F) %&gt;% dplyr::filter(V2 == &quot;protein_coding&quot;) dat_gene &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/CCLE/CCLE_RNAseq_genes_rpkm_20180929.gct&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Description %in% protein$V3) sample_overlap &lt;- intersect(names(dat_gene),sample$CCLE_ID) dat_gene_result &lt;- dat_gene %&gt;% dplyr::select(Description,all_of(sample_overlap)) write.table(dat_gene_result,&quot;/Users/guituantuan/Desktop/R_packages/MNet_CCLE/dat_gene.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 7.2 mlimma analysis dir.create(&quot;result/figure4&quot;) library(dplyr) library(MNet) sample &lt;- data.table::fread(&quot;raw_data/sample_met.txt&quot;) %&gt;% as.data.frame() dat_met &lt;- data.table::fread(&quot;raw_data/dat_met.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;CCLE_ID&quot;) %&gt;% t() %&gt;% as.data.frame() dat_gene &lt;- data.table::fread(&quot;raw_data/dat_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::distinct(Description,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;Description&quot;) sample_overlap &lt;- intersect(names(dat_met),names(dat_gene)) length(sample_overlap) dat_met_filter &lt;- dat_met %&gt;% dplyr::select(all_of(sample_overlap)) dat_gene_filter &lt;- dat_gene %&gt;% dplyr::select(all_of(sample_overlap)) write.table(dat_gene_filter,&quot;result/figure4/0.data_gene.txt&quot;,quote=F,sep=&quot;\\t&quot;) write.table(dat_met_filter,&quot;result/figure4/0.data_meta.txt&quot;,quote=F,sep=&quot;\\t&quot;) sample_filter &lt;- sample %&gt;% dplyr::filter(CCLE_ID %in% sample_overlap) %&gt;% dplyr::arrange(match(CCLE_ID,sample_overlap)) write.table(sample_filter,&quot;result/figure4/0.sample.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) group &lt;- sample_filter$group group[group==&quot;acute_myeloid_leukaemia&quot;] &lt;- &quot;tumor&quot; group[group==&quot;acute_lymphoblastic_leukaemia&quot;] &lt;- &quot;normal&quot; diff_met &lt;- mlimma(dat_met_filter,group) diff_gene &lt;- mlimma(log2(dat_gene_filter+1),group) write.table(diff_met,&quot;result/figure4/diff_met.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(diff_gene,&quot;result/figure4/diff_gene.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 7.3 EPE analysis library(dplyr) library(MNet) library(ggplot2) all_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() all_meta &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() kid &lt;- name2keggid(all_meta$name) kid1 &lt;- kid %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) all_meta1 &lt;- all_meta %&gt;% dplyr::left_join(kid1,by=c(&quot;name&quot;=&quot;Name&quot;)) %&gt;% dplyr::filter(!is.na(KEGG_id)) %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::distinct(KEGG_id,.keep_all = T) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG_id&quot;) ## gene diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 1) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_increase &lt;- PathwayAnalysis(diff_gene_increase$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/01.gene_increase.pdf&quot;,result_gene_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/01.gene_increase.png&quot;,result_gene_increase$p_barplot,width=10,height = 5) write.table(result_gene_increase$output,&quot;result/figure4/01.gene_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -1) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_decrease &lt;- PathwayAnalysis(diff_gene_decrease$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/01.gene_decrease.pdf&quot;,result_gene_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/01.gene_decrease.png&quot;,result_gene_decrease$p_barplot,width=10,height = 5) write.table(result_gene_decrease$output,&quot;result/figure4/01.gene_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta1 %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) result_meta_increase &lt;- PathwayAnalysis(diff_meta_increase$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/02.meta_increase.pdf&quot;,result_meta_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/02.meta_increase.png&quot;,result_meta_increase$p_barplot,width=10,height = 5) write.table(result_meta_increase$output,&quot;result/figure4/02.meta_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_meta_decrease &lt;- all_meta1 %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) result_meta_decrease &lt;- PathwayAnalysis(diff_meta_decrease$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/02.meta_decrease.pdf&quot;,result_meta_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/02.meta_decrease.png&quot;,result_meta_decrease$p_barplot,width=10,height = 5) write.table(result_meta_decrease$output,&quot;result/figure4/02.meta_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) ## gene and metabolite diff_increase &lt;- rbind(diff_gene_increase,diff_meta_increase) result_all_increase &lt;- PathwayAnalysis(diff_increase$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/03.all_increase.pdf&quot;,result_all_increase$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/03.all_increase.png&quot;,result_all_increase$p_barplot,width=10,height = 5) write.table(result_all_increase$output,&quot;result/figure4/03.all_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_decrease &lt;- rbind(diff_gene_decrease,diff_meta_decrease) result_all_decrease &lt;- PathwayAnalysis(diff_decrease$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/figure4/03.all_decrease.pdf&quot;,result_all_decrease$p_barplot,width=10,height = 5) ggsave(&quot;result/figure4/03.all_decrease.png&quot;,result_all_decrease$p_barplot,width=10,height = 5) write.table(result_all_decrease$output,&quot;result/figure4/03.all_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) Metabolite Gene Metabolite + Gene 7.4 EDA analysis library(dplyr) library(MNet) library(ggplot2) all_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() all_meta &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() kid &lt;- name2keggid(all_meta$name) kid1 &lt;- kid %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) all_meta1 &lt;- all_meta %&gt;% dplyr::left_join(kid1,by=c(&quot;name&quot;=&quot;Name&quot;)) %&gt;% dplyr::filter(!is.na(KEGG_id)) %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::distinct(KEGG_id,.keep_all = T) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG_id&quot;) diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 1) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -1) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) DAscore_gene &lt;- DAscore(diff_gene_increase$name,diff_gene_decrease$name,all_gene$name, min_measured_num = 10,out=&quot;gene&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/figure4/04.DA_gene.pdf&quot;,DAscore_gene$p,width=10,height = 8) ggsave(&quot;result/figure4/04.DA_gene.png&quot;,DAscore_gene$p,width=10,height = 8) write.table(DAscore_gene$result,&quot;result/figure4/04.DA_gene.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta1 %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) diff_meta_decrease &lt;- all_meta1 %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) DAscore_meta &lt;- DAscore(diff_meta_increase$name,diff_meta_decrease$name,all_meta1$name, min_measured_num = 3,out=&quot;metabolite&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/figure4/04.DA_meta.pdf&quot;,DAscore_meta$p,width=10,height = 8) ggsave(&quot;result/figure4/04.DA_meta.png&quot;,DAscore_meta$p,width=10,height = 8) write.table(DAscore_meta$result,&quot;result/figure4/04.DA_meta.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## gene and metabolite DAscore_all &lt;- DAscore(c(diff_gene_increase$name,diff_meta_increase$name), c(diff_gene_decrease$name,diff_meta_decrease$name), c(all_gene$name,all_meta$name),min_measured_num = 13, out=&quot;Extended&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/figure4/04.DA_all.pdf&quot;,DAscore_all$p,width=10,height = 10) ggsave(&quot;result/figure4/04.DA_all.png&quot;,DAscore_all$p,width=10,height = 10) write.table(DAscore_all$result,&quot;result/figure4/04.DA_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) Metabolite、Gene Metabolite + Gene 7.5 ESEA analysis library(dplyr) library(MNet) library(ggplot2) all_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() all_meta &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() kid &lt;- name2keggid(all_meta$name) kid1 &lt;- kid %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) all_meta1 &lt;- all_meta %&gt;% dplyr::left_join(kid1,by=c(&quot;name&quot;=&quot;Name&quot;)) %&gt;% dplyr::filter(!is.na(KEGG_id)) %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::distinct(KEGG_id,.keep_all = T) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG_id&quot;) all_result &lt;- rbind(all_meta1,all_gene) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta1$logFC names(meta) &lt;- all_meta1$name result_meta &lt;- ESEA(meta,out=&quot;metabolite&quot;,minSize = 3) result_gene &lt;- ESEA(gene,out = &quot;gene&quot;,minSize = 10) result_all &lt;- ESEA(all,out=&quot;Extended&quot;,minSize = 13) write.table(result_gene %&gt;% dplyr::mutate(leadingEdge=as.character(leadingEdge)),&quot;result/figure4/05.gene_gsea.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) write.table(result_meta %&gt;% dplyr::mutate(leadingEdge=as.character(leadingEdge)),&quot;result/figure4/05.meta_gsea.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) write.table(result_all %&gt;% dplyr::mutate(leadingEdge=as.character(leadingEdge)),&quot;result/figure4/05.all_gsea.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_meta_filter &lt;- result_meta %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;meta_AML&quot;,&quot;meta_ALL&quot;)) result_gene_filter &lt;- result_gene %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;gene_AML&quot;,&quot;gene_ALL&quot;)) result_all_filter &lt;- result_all %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;all_AML&quot;,&quot;all_ALL&quot;)) result &lt;- rbind(result_meta_filter,result_gene_filter,result_all_filter) result_filter &lt;- result %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;pathway&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::arrange(pval) pathway_hh &lt;- unique(result_filter$pathway_type) result_filter &lt;- result_filter %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result_filter$pathway &lt;- factor(result_filter$pathway,levels = rev(unique(result_filter$pathway))) result_filter$pathway_type &lt;- factor(result_filter$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;meta_AML&quot;,&quot;meta_ALL&quot;, &quot;gene_AML&quot;,&quot;gene_ALL&quot;,&quot;all_AML&quot;,&quot;all_ALL&quot;)) p &lt;- ggplot(result_filter,aes(pathway,-log10(pval))) + geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ facet_grid(. ~ Type,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL)+ coord_flip() ggsave(&quot;result/figure4/05.ESEA_facet.pdf&quot;,p,width=15,height = 7) ggsave(&quot;result/figure4/05.ESEA_facet.png&quot;,p,width=15,height = 7) 7.6 AML EPE analysis library(MNet) library(ggplot2) AML_gene &lt;- data.table::fread(&quot;result/figure4/01.gene_increase.txt&quot;) %&gt;% as.data.frame() AML_meta &lt;- data.table::fread(&quot;result/figure4/02.meta_increase.txt&quot;) %&gt;% as.data.frame() AML_all &lt;- data.table::fread(&quot;result/figure4/03.all_increase.txt&quot;) %&gt;% as.data.frame() pathway_all &lt;- rbind(AML_gene,AML_meta,AML_all) %&gt;% dplyr::filter(pvalue &lt; 0.001) %&gt;% dplyr::pull(name) %&gt;% unique() write.table(pathway_all,&quot;result/figure4/06.AML_pathway.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;,col.names = F) result_gene_filter &lt;- AML_gene %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) result_meta_filter &lt;- AML_meta %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) result_all_filter &lt;- AML_all %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) all &lt;- rbind(result_gene_filter,result_meta_filter,result_all_filter) %&gt;% dplyr::mutate(adjp=ifelse(pvalue &lt; 3.8e-04 ,3.8e-04,pvalue)) %&gt;% dplyr::mutate(type=factor(type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;))) p &lt;- ggplot(all,aes(type,name))+ geom_point(aes(size=nOverlap,color=-log10(pvalue)))+ theme_bw()+ theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = &quot;black&quot;))+ scale_color_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ labs(x=NULL,y=&quot;Pathway name&quot;) ggsave(&quot;result/figure4/06.AML.EPEA.pdf&quot;,p,width=6,height = 4) ggsave(&quot;result/figure4/06.AML.EPEA.png&quot;,p,width=6,height = 4) 7.7 Volcano plot 7.7.1 Differential metabolites and genes library(dplyr) library(ggplot2) library(MNet) dat_met &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Condition=ifelse(logFC &gt;= 0 &amp; P.Value &lt; 0.05,&quot;Up&quot;, ifelse(logFC &lt; 0 &amp; P.Value &lt; 0.05,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(label=ifelse(Condition==&quot;Not Sig&quot;,&quot;&quot;,name)) p &lt;- ggplot2::ggplot(dat_met,ggplot2::aes(logFC,-log2(P.Value)))+ ggplot2::geom_point(ggplot2::aes(color=Condition),size=2,alpha=0.7)+ ggplot2::geom_vline(xintercept=c(0), linetype = &#39;dashed&#39;,color=&quot;gray&quot;)+ ggplot2::geom_hline(yintercept = -log2(0.05),linetype=&#39;dashed&#39;,color=&quot;gray&quot;)+ ggrepel::geom_text_repel(ggplot2::aes(label=label),size=2)+ ggplot2::scale_color_manual(values=c(&quot;Up&quot;=&quot;red&quot;,&quot;Not Sig&quot;=&quot;gray&quot;,&quot;Down&quot;=&quot;blue&quot;))+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid.major = ggplot2::element_blank(),panel.grid.minor = ggplot2::element_blank())+ ggplot2::labs(x=&quot;log2(Fold Change)&quot;,y=&quot;-log2(P Value)&quot;) ggsave(&quot;result/figure4/07.volcano_met.pdf&quot;,p,width=6,height =5) ggsave(&quot;result/figure4/07.volcano_met.png&quot;,p,width=6,height =5) dat_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Condition=ifelse(logFC &gt;= 1 &amp; P.Value &lt; 0.05,&quot;Up&quot;, ifelse(logFC &lt; -1 &amp; P.Value &lt; 0.05,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(label=ifelse(Condition==&quot;Not Sig&quot;,&quot;&quot;,name)) p &lt;- ggplot2::ggplot(dat_gene,ggplot2::aes(logFC,-log2(P.Value)))+ ggplot2::geom_point(ggplot2::aes(color=Condition),size=2,alpha=0.7)+ ggplot2::geom_vline(xintercept=c(-1,1), linetype = &#39;dashed&#39;,color=&quot;gray&quot;)+ ggplot2::geom_hline(yintercept = -log2(0.05),linetype=&#39;dashed&#39;,color=&quot;gray&quot;)+ ggrepel::geom_text_repel(ggplot2::aes(label=label),size=2)+ ggplot2::scale_color_manual(values=c(&quot;Up&quot;=&quot;red&quot;,&quot;Not Sig&quot;=&quot;gray&quot;,&quot;Down&quot;=&quot;blue&quot;))+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid.major = ggplot2::element_blank(),panel.grid.minor = ggplot2::element_blank())+ ggplot2::labs(x=&quot;log2(Fold Change)&quot;,y=&quot;-log2(P Value)&quot;) ggsave(&quot;result/figure4/07.volcano_gene.pdf&quot;,p,width=6,height =5) ggsave(&quot;result/figure4/07.volcano_gene.png&quot;,p,width=6,height =5) Metabolite、Gene 7.7.2 ALL kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() ALL_gene &lt;- data.table::fread(&quot;result/figure4/01.gene_decrease.txt&quot;) %&gt;% as.data.frame() ALL_meta &lt;- data.table::fread(&quot;result/figure4/02.meta_decrease.txt&quot;) %&gt;% as.data.frame() ALL_all &lt;- data.table::fread(&quot;result/figure4/03.all_decrease.txt&quot;) %&gt;% as.data.frame() pathway_all &lt;- rbind(ALL_gene,ALL_meta,ALL_all) %&gt;% dplyr::filter(pvalue &lt; 0.001) %&gt;% dplyr::filter(!name %in% c(&quot;Lysine degradation&quot;,&quot;Glutathione metabolism&quot;, &quot;Butanoate metabolism&quot;)) %&gt;% dplyr::pull(name) %&gt;% unique() pathway_all &lt;- c(pathway_all,&quot;Alanine, aspartate and glutamate metabolism&quot;, &quot;Biosynthesis of unsaturated fatty acids&quot;) write.table(pathway_all,&quot;result/figure4/08.ALL_pathway.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;,col.names = F) result_gene_filter &lt;- ALL_gene %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) result_meta_filter &lt;- ALL_meta %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) result_all_filter &lt;- ALL_all %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) all &lt;- rbind(result_gene_filter,result_meta_filter,result_all_filter) %&gt;% dplyr::mutate(adjp=ifelse(pvalue &lt; 3.8e-04 ,3.8e-04,pvalue)) %&gt;% dplyr::mutate(type=factor(type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;))) p_epea &lt;- ggplot(all,aes(type,name))+ geom_point(aes(size=log2(nOverlap),color=-log10(pvalue)))+ theme_bw()+ theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = &quot;black&quot;))+ scale_color_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ labs(x=NULL,y=&quot;Pathway name&quot;) DA_met &lt;- data.table::fread(&quot;result/figure4/04.DA_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) DA_gene &lt;- data.table::fread(&quot;result/figure4/04.DA_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) DA_all &lt;- data.table::fread(&quot;result/figure4/04.DA_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) DA_result &lt;- rbind(DA_met,DA_gene,DA_all) p_da &lt;- ggplot2::ggplot(DA_result)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;black&quot;),axis.text.y=element_blank())+ geom_hline(yintercept=c(0))+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ facet_grid(. ~ type,scales=&quot;free_x&quot;) gsea_gene &lt;- data.table::fread(&quot;result/figure4/05.gene_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) gsea_meta &lt;- data.table::fread(&quot;result/figure4/05.meta_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) gsea_all &lt;- data.table::fread(&quot;result/figure4/05.all_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) gsea_result &lt;- rbind(gsea_gene,gsea_meta,gsea_all) p_gsea &lt;- ggplot(gsea_result,aes(pathway,NES,fill=-log10(pval)))+ geom_bar(stat=&quot;identity&quot;)+ theme_bw()+ geom_hline(yintercept=c(0))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.y=element_blank())+ scale_fill_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ coord_flip()+ facet_grid(. ~ type,scales=&quot;free_x&quot;)+ labs(x=&quot;Pathway name&quot;) p &lt;- cowplot::plot_grid(plotlist = list(p_epea,p_da,p_gsea),nrow=1) ggsave(&quot;result/figure4/08.ALL.pdf&quot;,p,width=26,height = 8) ggsave(&quot;result/figure4/08.ALL.png&quot;,p,width=26,height = 8) 7.7.3 AML kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() AML_gene &lt;- data.table::fread(&quot;result/figure4/01.gene_increase.txt&quot;) %&gt;% as.data.frame() AML_meta &lt;- data.table::fread(&quot;result/figure4/02.meta_increase.txt&quot;) %&gt;% as.data.frame() AML_all &lt;- data.table::fread(&quot;result/figure4/03.all_increase.txt&quot;) %&gt;% as.data.frame() pathway_all &lt;- rbind(AML_gene,AML_meta,AML_all) %&gt;% dplyr::filter(pvalue &lt; 0.001) %&gt;% dplyr::pull(name) %&gt;% unique() write.table(pathway_all,&quot;result/figure4/09.AML_pathway.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;,col.names = F) result_gene_filter &lt;- AML_gene %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) result_meta_filter &lt;- AML_meta %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) result_all_filter &lt;- AML_all %&gt;% as.data.frame() %&gt;% dplyr::select(name,nOverlap,pvalue) %&gt;% dplyr::filter(name %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) all &lt;- rbind(result_gene_filter,result_meta_filter,result_all_filter) %&gt;% dplyr::mutate(adjp=ifelse(pvalue &lt; 3.8e-04 ,3.8e-04,pvalue)) %&gt;% dplyr::mutate(type=factor(type,levels=c(&quot;metabolite&quot;,&quot;gene&quot;,&quot;all&quot;))) p_epea &lt;- ggplot(all,aes(type,name))+ geom_point(aes(size=log2(nOverlap),color=-log10(pvalue)))+ theme_bw()+ theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = &quot;black&quot;))+ scale_color_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ labs(x=NULL,y=&quot;Pathway name&quot;) DA_met &lt;- data.table::fread(&quot;result/figure4/04.DA_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) DA_gene &lt;- data.table::fread(&quot;result/figure4/04.DA_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) DA_all &lt;- data.table::fread(&quot;result/figure4/04.DA_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) DA_result &lt;- rbind(DA_met,DA_gene,DA_all) p_da &lt;- ggplot2::ggplot(DA_result)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;black&quot;),axis.text.y=element_blank())+ geom_hline(yintercept=c(0))+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ facet_grid(. ~ type,scales=&quot;free_x&quot;) gsea_gene &lt;- data.table::fread(&quot;result/figure4/05.gene_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;gene&quot;) gsea_meta &lt;- data.table::fread(&quot;result/figure4/05.meta_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;metabolite&quot;) gsea_all &lt;- data.table::fread(&quot;result/figure4/05.all_gsea.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(pathway %in% pathway_all) %&gt;% dplyr::mutate(type=&quot;all&quot;) gsea_result &lt;- rbind(gsea_gene,gsea_meta,gsea_all) p_gsea &lt;- ggplot(gsea_result,aes(pathway,NES,fill=-log10(pval)))+ geom_bar(stat=&quot;identity&quot;)+ theme_bw()+ geom_hline(yintercept=c(0))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.y=element_blank())+ scale_fill_gradient(low=&quot;white&quot;,high=&quot;red&quot;)+ coord_flip()+ facet_grid(. ~ type,scales=&quot;free_x&quot;)+ labs(x=&quot;Pathway name&quot;) p &lt;- cowplot::plot_grid(plotlist = list(p_epea,p_da,p_gsea),nrow=1) ggsave(&quot;result/figure4/09.AML.pdf&quot;,p,width=26,height = 8) ggsave(&quot;result/figure4/09.AML.png&quot;,p,width=26,height = 8) 7.8 Heatmap ## Heatmap_metabolite library(dplyr) library(ggplot2) library(ComplexHeatmap) library(MNet) diff_met &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_met &lt;- data.table::fread(&quot;result/figure4/0.data_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(V1 %in% diff_met$name) %&gt;% tibble::column_to_rownames(&quot;V1&quot;) sample &lt;- data.table::fread(&quot;result/figure4/0.sample.txt&quot;) %&gt;% as.data.frame() met_norm &lt;- myscale(dat_met,method=&quot;raw_zscore&quot;) %&gt;% dplyr::select(sample$CCLE_ID) top_annotation = HeatmapAnnotation( Lineage = sample$group, col=list(Lineage=c(&quot;acute_myeloid_leukaemia&quot;=&quot;#D01910&quot;, &quot;acute_lymphoblastic_leukaemia&quot;=&quot;#4B0082&quot;)), # show_legend = c(T,T,T), # 是否显示图例 show_annotation_name = c(T,T), # 是否显示注释名 border = c(T,T) ,# 是否显示边框 simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;) ) col_fun = circlize::colorRamp2(c(-1.5, 0, 1.5), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_metabolite &lt;- Heatmap(met_norm,height=unit(15,&quot;cm&quot;),name=&quot;Metabolite Data&quot;, top_annotation =top_annotation, cluster_column_slices = F, clustering_method_columns = &quot;complete&quot;, show_row_dend = FALSE, show_column_dend = FALSE, column_split = sample$group, # clustering_distance_columns =&quot;pearson&quot;, col = col_fun, # column_split = group,cluster_column_slices = F, #column_split = 6,row_split=6,show_column_names = TRUE, show_column_names = F, show_row_names = F, row_names_gp = gpar(fontsize = 2),column_names_gp = gpar(fontsize = 5)) pdf(&quot;result/figure4/10.heatmap.met.pdf&quot;,width=10,height = 10) p_metabolite dev.off() png(&quot;result/figure4/10.heatmap.met.png&quot;,width=800,height = 500) p_metabolite dev.off() ## Heatmap_gene diff_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt;1) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_gene &lt;- data.table::fread(&quot;result/figure4/0.data_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(V1 %in% diff_gene$name) %&gt;% tibble::column_to_rownames(&quot;V1&quot;) sample &lt;- data.table::fread(&quot;result/figure4/0.sample.txt&quot;) %&gt;% as.data.frame() gene_norm &lt;- myscale(dat_gene,method=&quot;raw_zscore&quot;) %&gt;% dplyr::select(sample$CCLE_ID) top_annotation = HeatmapAnnotation( Lineage = sample$group, col=list(Lineage=c(&quot;acute_myeloid_leukaemia&quot;=&quot;#D01910&quot;, &quot;acute_lymphoblastic_leukaemia&quot;=&quot;#4B0082&quot;)), # show_legend = c(T,T,T), # 是否显示图例 show_annotation_name = c(T,T), # 是否显示注释名 border = c(T,T) ,# 是否显示边框 simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;) ) col_fun = circlize::colorRamp2(c(-1.5, 0, 1.5), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_gene &lt;- Heatmap(gene_norm,height=unit(15,&quot;cm&quot;),name=&quot;Metabolite Data&quot;, top_annotation =top_annotation, cluster_column_slices = F, clustering_method_columns = &quot;complete&quot;, show_row_dend = FALSE, show_column_dend = FALSE, column_split = sample$group, # clustering_distance_columns =&quot;pearson&quot;, col = col_fun, show_column_names = F, show_row_names = F, row_names_gp = gpar(fontsize = 2),column_names_gp = gpar(fontsize = 5)) pdf(&quot;result/figure4/10.heatmap.gene.pdf&quot;,width=10,height = 10) p_gene dev.off() png(&quot;result/figure4/10.heatmap.gene.png&quot;,width=800,height = 500) p_gene dev.off() Metabolite、Gene 7.9 Subnetwork library(dplyr) library(MNet) diff_meta &lt;- data.table::fread(&quot;result/figure4/diff_met.txt&quot;) %&gt;% as.data.frame() kid &lt;- name2keggid(diff_meta$name) kid1 &lt;- kid %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) diff_meta &lt;- diff_meta %&gt;% dplyr::left_join(kid1,by=c(&quot;name&quot;=&quot;Name&quot;)) %&gt;% dplyr::filter(!is.na(KEGG_id)) %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::distinct(KEGG_id,.keep_all = T) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG_id&quot;) diff_gene &lt;- data.table::fread(&quot;result/figure4/diff_gene.txt&quot;) %&gt;% as.data.frame() names(diff_meta)[4] &lt;- &quot;p_value&quot; names(diff_gene)[4] &lt;- &quot;p_value&quot; pdf(&quot;result/figure4/11.pdnet.pdf&quot;,width=10,height = 10) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() png(&quot;result/figure4/11.pdnet.png&quot;,width=800,height = 800) a &lt;- pdnet(diff_meta,diff_gene,nsize=60) dev.off() node &lt;- a$node_result write.table(node,&quot;result/figure4/11.pdnet_node.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) edge &lt;- a$edge_result write.table(edge,&quot;result/figure4/11.pdnet_edge.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) "],["session-information.html", "Chapter 8 Session information", " Chapter 8 Session information sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: x86_64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.6.2 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; LAPACK version 3.11.0 ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## time zone: Asia/Shanghai ## tzcode source: internal ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] RColorBrewer_1.1-3 ggplot2_3.4.4 stringr_1.5.1 MNet_0.1.0 ## [5] dplyr_1.1.4 ## ## loaded via a namespace (and not attached): ## [1] sass_0.4.8 utf8_1.2.4 generics_0.1.3 ## [4] class_7.3-22 stringi_1.8.3 lattice_0.22-5 ## [7] digest_0.6.34 magrittr_2.0.3 evaluate_0.23 ## [10] grid_4.3.1 bookdown_0.37 fastmap_1.1.1 ## [13] Matrix_1.6-4 jsonlite_1.8.8 e1071_1.7-14 ## [16] limma_3.58.1 mgcv_1.9-0 fansi_1.0.6 ## [19] crosstalk_1.2.1 scales_1.3.0 permute_0.9-7 ## [22] jquerylib_0.1.4 cli_3.6.2 rlang_1.1.3 ## [25] Biobase_2.62.0 ellipsis_0.3.2 munsell_0.5.0 ## [28] splines_4.3.1 withr_3.0.0 cachem_1.0.8 ## [31] yaml_2.3.8 vegan_2.6-4 tools_4.3.1 ## [34] parallel_4.3.1 colorspace_2.1-0 DT_0.30 ## [37] BiocGenerics_0.48.1 png_0.1-8 vctrs_0.6.5 ## [40] R6_2.5.1 proxy_0.4-27 lifecycle_1.0.4 ## [43] htmlwidgets_1.6.4 MASS_7.3-60 cluster_2.1.6 ## [46] pkgconfig_2.0.3 pillar_1.9.0 bslib_0.6.1 ## [49] gtable_0.3.4 data.table_1.14.10 glue_1.7.0 ## [52] statmod_1.5.0 xfun_0.41 tibble_3.2.1 ## [55] tidyselect_1.2.0 highr_0.10 rstudioapi_0.15.0 ## [58] knitr_1.45 htmltools_0.5.7 nlme_3.1-164 ## [61] igraph_1.6.0 rmarkdown_2.25 compiler_4.3.1 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
