[["index.html", "MNet Chapter 1 Introduction &amp; Installation 1.1 Overview of Workflow 1.2 Installation", " MNet Tuantuan Gui and Hai Fang 2023-02-22 Chapter 1 Introduction &amp; Installation Technological advances in metabolomics make it increasingly reliable to comprehensively detect and quantify small compounds in an unbiased manner. With the reduced costs come a wide range of applications, for example, in epidemiological, genetic and clinical studies. Meanwhile, integrated analyses of metabolomics with other omics, for example, gene expression transcriptomic datasets, are receiving the increasing attention, most of these existing tools, however, only deal with individual pathways or can’t extract the subnetwork involving multiple pathways; in other words, they do not consider the network knowledge of gene-metabolite or metabolite-metabolite relations hidden in available metabolic pathways. Here we present “MNet”, an R package enabling network-based integration of metabolomics with clinical and transcriptomic data. 1.1 Overview of Workflow The package MNet is designed to provide a collection of functionalities aiding in metabolome data interpretation together with clinical data and gene expression data. It not only supports the routine analyses and visualisations in terms of metabolomic datasets (including but not limited to: differential metabolites analyses/visualisations/feature selection), the differential abundance analyses which is designed to detect which pathways are differentially abundant between two conditions, but also is capable of carrying out integrated analysis of metabolic and clinical data (such as ggcor package), integrated analysis of metabolic and gene expression data (the metabolite and gene pathway analyses and the subnetwork analyses of metabolite-gene network analyses). Also supported is the time series analysis with the help of other packages (mFuzz package and supraHex package). 1.2 Installation The R package MNet requires R version 4.0.0 or higher, please see https://cran.r-project.org. The package ggcor and XGR are from GitHub. Hence, it is recommended to install the package before installing MNet. Please install it via github. if(!require(devtools)){ install.packages(&quot;devtools&quot;) } devtools::install_github(&quot;Github-Yilei/ggcor&quot;) devtools::install_github(&quot;hfang-bristol/XGR&quot;) MNet is available for all operating systems and can be installed via the Github. devtools::install_github(&quot;tuantuangui/MNet&quot;) library(MNet) check the package ‘MNet’ successfully installed library(help=MNet) "],["example-unique-analyses.html", "Chapter 2 Example-unique analyses 2.1 Loading the data 2.2 Pathway enrichment analysis 2.3 Pathway differential abundance score 2.4 Subnetwork analysis of Metabolism and transcriptome data from TNBC: 2.5 Subnetwork analysis of interested metabolites and genes", " Chapter 2 Example-unique analyses 2.1 Loading the data The case study is an integrated metabolic and transcriptional analysis to understand the rapidly proliferating breast cancers (Liao, et al., 2022). In this paper, the authors characterized the metabolomic profile of two types of 31 breast tumors in human to uncovered pyrimidine metabolism and glutaminolysis pathways are elevated in TNBC. As an example of mixed metabolites and genes analyses, here we are going to use both the dataset of metabolite and gene expression data as reported in the paper. The metabolomics data was accessed from the Supplementary Tables S2 in the paper, and the gene expression data is from the author. They found that pyrimidine and purine metabolism, carbon metabolism, and the energy production related pathways were highly enriched in Cluster 2 while many lipid/fatty acid metabolism related pathways were enriched in Cluster 1. We will use MNet to identify a set of features whose activity changes significantly between the two sample clusters.This result will hopefully hint at some specific biological activities that are pathologically altered in tumoral samples. library(dplyr) library(MNet) library(stringr) library(ggplot2) library(RColorBrewer) sample_dat &lt;- readxl::read_excel(&quot;/Users/guituantuan/Desktop/R_packages/MNet/vignettes/data1/can-21-2745_supplementary_table_s1_supps1.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(`Sample Name`)) %&gt;% dplyr::filter(!grepl(&quot;Normal&quot;,`Sample Name`)) %&gt;% dplyr::select(`Sample Name`,`Cluster Classification`) gene_dat &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/R_packages/MNet/vignettes/data1/40n-cleaned_logtrans_70flt.txt&quot;) %&gt;% as.data.frame() name_new &lt;- str_split(names(gene_dat),&quot;[|]&quot;,simplify =TRUE) name_new[1,3]=name_new[1,1] names(gene_dat) &lt;- name_new[,3] gene_dat1 &lt;- gene_dat %&gt;% dplyr::distinct(CLID,.keep_all = TRUE) %&gt;% tibble::column_to_rownames(&quot;CLID&quot;) %&gt;% dplyr::select_if(!grepl(&quot;^N&quot;, names(.))) names(gene_dat1) &lt;- gsub(&quot;TNBC&quot;,&quot;1TNBC-&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;^T&quot;,&quot;ER-&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;1TNBC&quot;,&quot;TNBC&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX1&quot;,&quot;WHIM30-1&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX2&quot;,&quot;WHIM30-2&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX3&quot;,&quot;WHIM30-3&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX4&quot;,&quot;WHIM30-4&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX5&quot;,&quot;WHIM2-1&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX6&quot;,&quot;WHIM2-2&quot;,names(gene_dat1)) names(gene_dat1) &lt;- gsub(&quot;PDX7&quot;,&quot;WHIM2-3&quot;,names(gene_dat1)) gene_dat_result &lt;- gene_dat1 %&gt;% dplyr::select(sample_dat$`Sample Name`) %&gt;% exp() meta_dat &lt;- readxl::read_excel(&quot;/Users/guituantuan/Desktop/R_packages/MNet/vignettes/data1/can-21-2745_supplementary_table_s2_supps2.xlsx&quot;,sheet=1) %&gt;% as.data.frame() %&gt;% dplyr::select(-`Chemical Formaula`,-MZ,-HMDB,-KEGG,-PubChem) %&gt;% tibble::column_to_rownames(&quot;Metabolite Name&quot;) %&gt;% dplyr::select(sample_dat$`Sample Name`) %&gt;% log2() group &lt;- sample_dat$`Cluster Classification` group[which(group==&quot;Cluster 1&quot;)] &lt;- &quot;tumor&quot; group[which(group==&quot;Cluster 2&quot;)] &lt;- &quot;normal&quot; annotation &lt;- readxl::read_excel(&quot;/Users/guituantuan/Desktop/R_packages/MNet/vignettes/data1/can-21-2745_supplementary_table_s2_supps2.xlsx&quot;,sheet=3) %&gt;% as.data.frame() %&gt;% dplyr::filter(KEGG!= &quot;NA&quot;) %&gt;% dplyr::select(`Metabolite Name`,KEGG) diff_meta &lt;- mlimma(meta_dat,group) %&gt;% dplyr::left_join(annotation,by=c(&quot;name&quot;=&quot;Metabolite Name&quot;)) %&gt;% dplyr::mutate(name=ifelse(is.na(KEGG),name,KEGG)) %&gt;% dplyr::select(-KEGG) diff_gene &lt;- mlimma(gene_dat_result,group) head(diff_meta) head(diff_gene) 2.2 Pathway enrichment analysis 2.2.1 Extended pathway enrichment KEGG metabolic pathway-based extended pathway enrichment (EPE) analysis to investigate the dysregulation of metabolic pathways considering both metabolites and genes. all_dat &lt;- rbind(diff_gene,diff_meta) all_dat1 &lt;- all_dat %&gt;% dplyr::filter(logFC&gt;0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result1 &lt;- PathwayAnalysis(all_dat1$name,out=&quot;Extended&quot;,p_cutoff=0.01) ggsave(&quot;result_v0131/EPE1.pdf&quot;,result1$gp,width=20,height = 20) ggsave(&quot;result_v0131/EPE_gene_meta_cluster1.pdf&quot;,result1$p_barplot,width=10,height = 10) all_dat2 &lt;- all_dat %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result2 &lt;- PathwayAnalysis(all_dat2$name,out=&quot;Extended&quot;,p_cutoff=0.01) ggsave(&quot;result_v0131/EPE2.pdf&quot;,result2$gp,width=20,height=10) ggsave(&quot;result_v0131/EPE_gene_meta_cluster2.pdf&quot;,result2$p_barplot,width=10,height = 10) p &lt;- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) ggsave(&quot;result_v0131/EPE_gene_meta.pdf&quot;,p,width=20,height = 10) 2.2.2 metabolite pathway enrichment all_dat &lt;- diff_meta all_dat1 &lt;- all_dat %&gt;% dplyr::filter(logFC&gt;0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result1 &lt;- PathwayAnalysis(all_dat1$name,out=&quot;metabolite&quot;,p_cutoff=0.1) ggsave(&quot;result_v0131/PE_meta1.pdf&quot;,result1$gp,width=20,height = 20) write.table(result1$output,&quot;result_v0131/PE_meta1.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ggsave(&quot;result_v0131/PE_meta_cluster1.pdf&quot;,result1$p_barplot,width=10,height = 10) all_dat2 &lt;- all_dat %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result2 &lt;- PathwayAnalysis(all_dat2$name,out=&quot;metabolite&quot;,p_cutoff=0.1) write.table(result2$output,&quot;result_v0131/PE_gene2.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ggsave(&quot;result_v0131/PE_meta2.pdf&quot;,result2$gp) ggsave(&quot;result_v0131/PE_meta_cluster2.pdf&quot;,result2$p_barplot,width=10,height = 10) p &lt;- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) ggsave(&quot;result_v0131/PE_meta.pdf&quot;,p,width=20,height = 10) 2.2.3 gene pathway enrichment 因为基因差异注释后的比较少，所以选择阈值小点的 all_dat &lt;- diff_gene all_dat1 &lt;- all_dat %&gt;% dplyr::filter(logFC&gt;0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result1 &lt;- PathwayAnalysis(all_dat1$name,out=&quot;gene&quot;,p_cutoff=0.1) ggsave(&quot;result_v0131/PE_gene1.pdf&quot;,result1$gp,width=20,height = 20) write.table(result1$output,&quot;result_v0131/PE_gene1.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ggsave(&quot;result_v0131/PE_gene_cluster1.pdf&quot;,result1$p_barplot,width=10,height = 10) all_dat2 &lt;- all_dat %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result2 &lt;- PathwayAnalysis(all_dat2$name,out=&quot;gene&quot;,p_cutoff=0.1) write.table(result2$output,&quot;result_v0131/PE_gene2.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ggsave(&quot;result_v0131/PE_gene2.pdf&quot;,result2$gp) ggsave(&quot;result_v0131/PE_gene_cluster2.pdf&quot;,result2$p_barplot,width=10,height = 10) p &lt;- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) ggsave(&quot;result_v0131/PE_gene.pdf&quot;,p,width=20,height = 10) 2.3 Pathway differential abundance score 2.3.1 Extended pathway differential abundance score KEGG metabolic pathway-based extended differential abundance (EDA) analysis investigate the dysregulation of metabolic pathways considering both metabolites and genes. diff_gene_increase &lt;- diff_gene %&gt;% dplyr::filter(logFC&gt;0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_gene_decrease &lt;- diff_gene %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_meta_increase &lt;- diff_meta %&gt;% dplyr::filter(logFC&gt;0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_meta_decrease &lt;- diff_meta %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) ExtendDAscore_result &lt;- ExtendDAscore(increase_gene=diff_gene_increase$name,decrease_gene=diff_gene_decrease$name,all_gene=diff_gene$name,increase_meta=diff_meta_increase$name,decrease_meta=diff_meta_decrease$name,all_meta=diff_meta$name,min_measured_num = 2) ggsave(&quot;result_v0131/EDA.pdf&quot;,ExtendDAscore_result$p,width=10,height = 15) 2.3.2 metabolite differential abundance score diff_meta_increase &lt;- diff_meta %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_meta_decrease &lt;- diff_meta %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) dascore_result_meta &lt;- DAscore(diff_meta_increase$name,diff_meta_decrease$name,diff_meta$name,out=&quot;metabolite&quot;) ggsave(&quot;result_v0131/DAscore_metabolite.pdf&quot;,dascore_result_meta$p,width=10,height = 15) 2.3.3 gene differential abundance score diff_gene_increase &lt;- diff_gene %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) diff_gene_decrease &lt;- diff_gene %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) dascore_result_gene &lt;- DAscore(diff_gene_increase$name,diff_gene_decrease$name,diff_gene$name,out=&quot;gene&quot;) ggsave(&quot;result_v0131/DAscore_gene.pdf&quot;,dascore_result_gene$p,width=10,height = 15) 2.4 Subnetwork analysis of Metabolism and transcriptome data from TNBC: the data need to have the column name “name”, and have the “p_value”,“logFC” is alternative. If have the “logFC”, the color in the figure is the logFC, otherwise, the color “blue” in figure means metabolites and the color “red” means the genes. names(diff_meta)[4] &lt;- &quot;p_value&quot; diff_metabolite &lt;- diff_meta %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) %&gt;% dplyr::filter(abs(logFC)&gt;1) names(diff_gene)[4] &lt;- &quot;p_value&quot; diff_gene1 &lt;- diff_gene %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) %&gt;% dplyr::filter(abs(logFC)&gt;1) pdf(&quot;result_v0131/subnetwork_important.pdf&quot;) a &lt;- pdnet(diff_meta,diff_gene,nsize=50) dev.off() 2.5 Subnetwork analysis of interested metabolites and genes the data need to have the column name “name”, and do not have the “p_value” pdf(&quot;result_v0131/subnetwork_interested.pdf&quot;) a &lt;- pdnet(diff_metabolite[,8],diff_gene1[,8]) dev.off() write.table(a,&quot;result_v0131/subnetwork_interested_edge.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) "],["example-rountine-analyses.html", "Chapter 3 Example-rountine analyses 3.1 Metabolite name change 3.2 Group-wise analyses 3.3 Feature selection 3.4 Pathway analysis 3.5 Clinical analysis", " Chapter 3 Example-rountine analyses 3.1 Metabolite name change 3.1.1 Metabolite name changed to refmet name This step requires networking RefMet: A Reference list of Metabolite names The main objective of RefMet is to provide a standardized reference nomenclature for both discrete metabolite structures and metabolite species identified by spectroscopic techniques in metabolomics experiments. compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) refmetid_result &lt;- name2refmet(compound_name) write.table(refmetid_result,&quot;result_v0131/refmetid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Input name refmet_name formula exactmass super_class ## 1 1-Methyladenosine 1-Methyladenosine C11H15N5O4 281.1124 Nucleic acids ## 2 2-Hydroxybutyric acid 2-Hydroxybutyric acid C4H8O3 104.0473 Fatty Acyls ## 3 tt tt &lt;NA&gt; NA &lt;NA&gt; ## 4 2-Aminooctanoic acid 2-Aminooctanoic acid C8H17NO2 159.1259 Organic acids ## main_class sub_class class_index ## 1 Purines Purine ribonucleosides 1330 ## 2 Fatty acids Hydroxy FA 125 ## 3 &lt;NA&gt; &lt;NA&gt; NA ## 4 Amino acids and peptides Amino acids NA 3.1.2 Metabolite name changed to kegg id This step requires networking search the kegg id corresponding to the metabolites name compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) keggid_result &lt;- name2keggid(compound_name) %&gt;% tidyr::separate_rows(kegg_id,sep=&quot;;&quot;) %&gt;% tibble::as_tibble() write.table(keggid_result,&quot;result_v0131/keggid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## name kegg_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; 3.1.3 Metabolite name corresponding to kegg pathway This step requires networking search the kegg pathway corresponding to the metabolite name compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) result_all &lt;- name2pathway(compound_name) ##### the output is the each metabolite related pathway result_name2pathway &lt;- result_all$name2pathway write.table(result_name2pathway,&quot;result_v0131/name2pathway_keggpathway.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2keggid &lt;- result_all$kegg_id write.table(result_name2keggid,&quot;result_v0131/name2pathway_keggid.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2enrichpathway &lt;- result_all$pathway write.table(result_name2enrichpathway,&quot;result_v0131/name2pathway_pathwayenrich.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## name kegg_id PATHWAY pathwayid ## 1 2-Hydroxybutyric acid C05984 Propanoate metabolism hsa00640 ## name kegg_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; ## name nAnno nOverlap fc zscore pvalue adjp or CIl CIu distance ## 1 Propanoate metabolism 40 1 76.1 8.66 0.013 1 Inf 1.93 Inf 1 ## namespace members_Overlap ## 1 Customised C05984 ## members_Anno ## 1 C00024, C00042, C00068, C00083, C00091, C00099, C00100, C00109, C00111, C00163, C00186, C00222, C00424, C00479, C00546, C00583, C00683, C00804, C00827, C00894, C01013, C01213, C02170, C02225, C02335, C02876, C04225, C04593, C05235, C05668, C05979, C05983, C05984, C05989, C06002, C15972, C15973, C21017, C21018, C21250 ## members_Overlap_name ## 1 2-Hydroxybutyric acid ## members_Anno_name ## 1 Acetyl-CoA;Succinate;Thiamin diphosphate;Malonyl-CoA;Succinyl-CoA;beta-Alanine;Propanoyl-CoA;2-Oxobutanoate;Glycerone phosphate;Propanoate;(S)-Lactate;3-Oxopropanoate;(S)-Lactaldehyde;Propanal;Methylglyoxal;Propane-1,2-diol;(S)-Methylmalonyl-CoA;Propynoate;Lactoyl-CoA;Propenoyl-CoA;3-Hydroxypropanoate;(R)-Methylmalonyl-CoA;Methylmalonate;2-Methylcitrate;beta-Alanyl-CoA;Propanoyl phosphate;(Z)-But-2-ene-1,2,3-tricarboxylate;(2S,3R)-3-Hydroxybutane-1,2,3-tricarboxylate;Hydroxyacetone;3-Hydroxypropionyl-CoA;Propane-1-ol;Propionyladenylate;2-Hydroxybutyric acid;3-Oxopropionyl-CoA;(S)-Methylmalonate semialdehyde;Enzyme N6-(lipoyl)lysine;Enzyme N6-(dihydrolipoyl)lysine;2-(alpha-Hydroxypropyl)thiamine diphosphate;Enzyme N6-(S-propyldihydrolipoyl)lysine;2-Methyl-trans-aconitate 3.1.4 Metabolite keggid to kegg pathway keggid &lt;- c(&quot;C05984&quot;,&quot;C02494&quot;) ##### the output is the each metabolite related pathway keggpathway_result &lt;- keggid2pathway(keggid) head(keggpathway_result) ## # A tibble: 1 × 5 ## ENTRY NAME PATHWAY pathw…¹ V2 ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 C05984 2-Hydroxybutanoic acid;///2-Hydroxybutyrate;///2-Hydr… Propan… Carboh… hsa0… ## # … with abbreviated variable name ¹​pathway_type 3.1.5 the pathway information result &lt;- pathwayinfo(&quot;hsa00630&quot;) result &lt;- pathwayinfo(&quot;Glyoxylate and dicarboxylate metabolism&quot;) result$gene_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname ## 1 gene ACSS1 hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 gene ACSS2 hsa00630 Glyoxylate and dicarboxylate metabolism ## kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism result$compound_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname ## 1 metabolite C00007 hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 metabolite C00011 hsa00630 Glyoxylate and dicarboxylate metabolism ## kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism 3.1.6 pathway name to pathway id pathwayid &lt;- pathway2pathwayid(&quot;Glycolysis / Gluconeogenesis&quot;) pathwayid ## PATHWAY pathwayid ## 1 Glycolysis / Gluconeogenesis hsa00010 3.2 Group-wise analyses 3.2.1 PCA plot PCA of the data ### the pca plot p_PCA &lt;- pPCA(mexpr,group) ggplot2::ggsave(&quot;result/1.PCA_1.png&quot;,p_PCA$p1) ggplot2::ggsave(&quot;result/1.PCA_2.png&quot;,p_PCA$p2) ggplot2::ggsave(&quot;result/1.PCA_3.png&quot;,p_PCA$p3) 3.2.2 Differnetial metabolite analysis 3.2.2.1 using the function mlimma in R packages “MNet” diff_result &lt;- mlimma(mexpr,group) 3.2.2.2 using the function DM in R packages “MNet” diff_result &lt;- DM(mexpr,group) dev.off() write.table(diff_result,&quot;result/DM_result.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## filter the differential metabolites by default fold change &gt;1.5 or &lt; 1/1.5 ,fdr &lt; 0.05 and VIP&gt;1 diff_result_filter &lt;- diff_result %&gt;% dplyr::filter(fold_change &gt;1.3 | fold_change &lt; 1/1.3) %&gt;% dplyr::filter(fdr_wilcox&lt;0.1) %&gt;% dplyr::filter(vip&gt;0.8) utils::write.table(diff_result,&quot;result/2.all_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) utils::write.table(diff_result_filter,&quot;result/2.diff_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 3.2.3 Differential metabolites’ volcano the volcano plot of metabolites using the function “pVolcano” in the package “MNet” p_volcano &lt;- pVolcano(diff_result,foldchange=1.5) #p_volcano ggplot2::ggsave(&quot;result/3.volcano.pdf&quot;,p_volcano) ggplot2::ggsave(&quot;result/3.volcano.png&quot;,p_volcano) 3.2.4 Differential metabolites’ heatmap the heatmap plot of differentital metabolites using the function “pHeatmap” in R package “MNet” mexpr_diff &lt;- mexpr[rownames(mexpr) %in% diff_result_filter$name,] p_heatmap &lt;- pHeatmap(mexpr_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=&quot;complete&quot;,clustering_distance_cols=&quot;euclidean&quot;) ggplot2::ggsave(&quot;result/3.heatmap.png&quot;,p_heatmap,width=10,height=8) 3.2.5 Differential metabolites’ zscore the zscore plot of differentital metabolites using the function “pZscore” in R package “MNet” p_zscore &lt;- pZscore(mexpr_diff,group) #p_zscore ggplot2::ggsave(&quot;result/3.z_score.png&quot;,p_zscore,width=5,height=5) 3.3 Feature selection 3.3.1 Boruta group &lt;- rep(&quot;normal&quot;,length(names(mexpr))) group[grep(&quot;TUMOR&quot;,names(mexpr))] &lt;- &quot;tumor&quot; mexpr1 &lt;- t(mexpr) %&gt;% as.data.frame() %&gt;% dplyr::mutate(group=group) result_ML_Boruta &lt;- ML_Boruta(mexpr1) 3.3.2 Random Forest result_ML_RF &lt;- ML_RF(mexpr1) result_ML_RF$p result_ML_RF$feature_result 3.3.3 XGBoost result_ML_xgboost &lt;- ML_xgboost(mexpr1) result_ML_xgboost$p result_ML_xgboost$feature_result 3.3.4 LASSO result_ML_lasso &lt;- ML_alpha(mexpr1,method=&quot;lasso&quot;) 3.3.5 elastic network result_ML_elastic &lt;- ML_alpha(mexpr1,method=&quot;elastic&quot;) 3.4 Pathway analysis 3.4.1 pathview only metabolite meta_name &lt;- c(&quot;C00022&quot;,&quot;C00024&quot;,&quot;C00031&quot;,&quot;C00025&quot;,&quot;C00032&quot;) meta_value &lt;- c(1,2,-1,2,1) names(meta_value) &lt;- meta_name gene_name &lt;- c(&quot;B4GALT2&quot;,&quot;AGPAT3&quot;,&quot;FHIT&quot;) gene_value &lt;- c(3,0.5,-2) names(gene_value) &lt;- gene_name pPathview(cpd.data=meta_value,outdir=&quot;result_v0131&quot;) 3.4.2 pathview metabolite and gene pPathview(cpd.data=meta_value,gene.data=gene_value,outdir=&quot;result_v0132&quot;) 3.5 Clinical analysis 3.5.1 Time series of clinical time_series_ALT &lt;- pCliTS(clinical_index,&quot;ALT&quot;) ggsave(&quot;result_v0131/clinical_time_series.png&quot;,time_series_ALT) 3.5.2 Correlation between clinical and metabolites using mantel test mexpr1 &lt;- t(mexpr) clinical_data &lt;- as.data.frame(t(clinical))[,1:5] metabolite_data &lt;- as.data.frame(mexpr1)[1:28,] p &lt;- pCorCliMetMantel(clinical_data,metabolite_data) ggsave(&quot;result_v0131/correlation_metabolites_clinical.png&quot;,p) 3.5.3 Survival analysis p &lt;- survCli(clinical_survival) png(&quot;result_v0131/survival_OS.png&quot;) p$p_OS dev.off() png(&quot;result_v0131/survival_RFS.png&quot;) p$p_RFS dev.off() png(&quot;result_v0131/survival_EFS.png&quot;) p$p_EFS dev.off() 3.5.4 Metabolites’ survival plot metabolites &lt;- c(&quot;C03819&quot;,&quot;C02918&quot;,&quot;C03916&quot;) survMet(dat_surv,metabolites,cluster_method=&quot;mean&quot;,out_dir=&quot;result_v0131/survival/&quot;) 3.5.5 Cox analysis result &lt;- MetCox(dat_surv) write.table(result,&quot;result_v0131/clinical_cox.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names = F) "],["session-information.html", "Chapter 4 Session information", " Chapter 4 Session information sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.6 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] dplyr_1.0.9 knitr_1.39 MNet_0.1.0 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.4.0 shadowtext_0.1.2 backports_1.4.1 ## [4] fastmatch_1.1-3 RCircos_1.2.2 plyr_1.8.7 ## [7] igraph_1.3.4 lazyeval_0.2.2 splines_4.2.1 ## [10] crosstalk_1.2.0 BiocParallel_1.30.3 pathview_1.36.0 ## [13] ggnetwork_0.5.10 GenomeInfoDb_1.32.3 ggplot2_3.3.6 ## [16] digest_0.6.29 yulab.utils_0.0.5 htmltools_0.5.3 ## [19] GOSemSim_2.22.0 viridis_0.6.2 GO.db_3.15.0 ## [22] fansi_1.0.3 magrittr_2.0.3 memoise_2.0.1 ## [25] strex_1.6.0 cluster_2.1.3 tzdb_0.3.0 ## [28] limma_3.52.2 readr_2.1.2 Biostrings_2.64.0 ## [31] graphlayouts_0.8.0 enrichplot_1.16.1 colorspace_2.0-3 ## [34] blob_1.2.3 ggrepel_0.9.1 xfun_0.32 ## [37] hexbin_1.28.2 crayon_1.5.1 RCurl_1.98-1.8 ## [40] jsonlite_1.8.0 graph_1.74.0 scatterpie_0.1.7 ## [43] supraHex_1.34.0 osfr_0.2.8 ape_5.6-2 ## [46] glue_1.6.2 polyclip_1.10-0 gtable_0.3.0 ## [49] zlibbioc_1.42.0 XVector_0.36.0 UpSetR_1.4.0 ## [52] car_3.1-0 Rgraphviz_2.40.0 BiocGenerics_0.42.0 ## [55] abind_1.4-5 scales_1.2.0 DOSE_3.22.0 ## [58] DBI_1.1.3 rstatix_0.7.0 Rcpp_1.0.9 ## [61] viridisLite_0.4.0 gridGraphics_0.5-1 tidytree_0.4.0 ## [64] bit_4.0.4 proxy_0.4-27 stats4_4.2.1 ## [67] DT_0.24 htmlwidgets_1.5.4 httr_1.4.3 ## [70] fgsea_1.22.0 RColorBrewer_1.1-3 ellipsis_0.3.2 ## [73] pkgconfig_2.0.3 XML_3.99-0.10 farver_2.1.1 ## [76] sass_0.4.2 crul_1.2.0 utf8_1.2.2 ## [79] ggplotify_0.1.0 tidyselect_1.1.2 rlang_1.0.6 ## [82] reshape2_1.4.4 AnnotationDbi_1.58.0 munsell_0.5.0 ## [85] cellranger_1.1.0 tools_4.2.1 cachem_1.0.6 ## [88] downloader_0.4 cli_3.6.0 generics_0.1.3 ## [91] RSQLite_2.2.15 broom_1.0.2 evaluate_0.16 ## [94] stringr_1.5.0 fastmap_1.1.0 yaml_2.3.5 ## [97] ggtree_3.4.2 fs_1.5.2 org.Hs.eg.db_3.15.0 ## [100] bit64_4.0.5 tidygraph_1.2.1 purrr_0.3.4 ## [103] KEGGREST_1.36.3 ggraph_2.0.6 nlme_3.1-157 ## [106] filesstrings_3.2.4 KEGGgraph_1.56.0 aplot_0.1.6 ## [109] DO.db_2.9 compiler_4.2.1 rstudioapi_0.13 ## [112] curl_4.3.2 png_0.1-7 e1071_1.7-11 ## [115] treeio_1.20.2 tibble_3.1.8 tweenr_1.0.2 ## [118] bslib_0.4.0 stringi_1.7.8 highr_0.9 ## [121] lattice_0.20-45 Matrix_1.4-1 vegan_2.6-2 ## [124] permute_0.9-7 vctrs_0.5.1 pillar_1.8.0 ## [127] lifecycle_1.0.3 jquerylib_0.1.4 data.table_1.14.2 ## [130] cowplot_1.1.1 bitops_1.0-7 dnet_1.1.7 ## [133] GenomicRanges_1.48.0 patchwork_1.1.1 qvalue_2.28.0 ## [136] R6_2.5.1 XGR_1.1.8 bookdown_0.28 ## [139] gridExtra_2.3 IRanges_2.30.0 codetools_0.2-18 ## [142] MASS_7.3-58.1 assertthat_0.2.1 httpcode_0.3.0 ## [145] S4Vectors_0.34.0 GenomeInfoDbData_1.2.8 hms_1.1.1 ## [148] mgcv_1.8-40 parallel_4.2.1 clusterProfiler_4.4.4 ## [151] grid_4.2.1 ggfun_0.0.6 tidyr_1.2.0 ## [154] class_7.3-20 rmarkdown_2.14 carData_3.0-5 ## [157] ggforce_0.3.3 Biobase_2.56.0 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
