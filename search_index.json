[["index.html", "MNet Chapter 1 Introduction &amp; Installation 1.1 Overview of Workflow 1.2 Installation", " MNet Tuantuan Gui and Hai Fang 2024-01-10 Chapter 1 Introduction &amp; Installation Technological advances in metabolomics make it increasingly reliable to comprehensively detect and quantify small compounds in an unbiased manner. With the reduced costs come a wide range of applications, for example, in epidemiological, genetic and clinical studies. Meanwhile, integrated analyses of metabolomics with other omics, for example, gene expression transcriptomic datasets, are receiving the increasing attention, most of these existing tools, however, only deal with individual pathways or can’t extract the subnetwork involving multiple pathways; in other words, they do not consider the network knowledge of gene-metabolite or metabolite-metabolite relations hidden in available metabolic pathways. Here we present “MNet”, an R package enabling network-based integration of metabolomics with clinical and transcriptomic data. 1.1 Overview of Workflow The package MNet is designed to provide a collection of functionalities aiding in metabolome data interpretation together with clinical data and gene expression data. It not only supports the routine analyses and visualisations in terms of metabolomic datasets (including but not limited to: differential metabolites analyses/visualisations/feature selection), the extended pathway enrichment analyses which is designed to detect which pathways are differentially abundant between two conditions, but also is capable of carrying out integrated analysis of metabolic and gene expression data (the metabolite and gene pathway analyses and the subnetwork analyses of metabolite-gene network analyses). 1.2 Installation The R package MNet requires R version 4.0.0 or higher, please see https://cran.r-project.org. if(!require(devtools)){ install.packages(&quot;devtools&quot;) } MNet is available for all operating systems and can be installed via the Github. devtools::install_github(&quot;tuantuangui/MNet&quot;) library(MNet) check the package ‘MNet’ successfully installed library(help=MNet) "],["example-unique-analyses.html", "Chapter 2 Example-unique analyses 2.1 Loading the data 2.2 Pathway enrichment analysis 2.3 Pathway differential abundance score 2.4 ESEA Metabolite Set Enrichment Analysis", " Chapter 2 Example-unique analyses 2.1 Loading the data The case study is an integrated metabolic and transcriptional analysis to understand the rapidly proliferating breast cancers (Liao, et al., 2022). In this paper, the authors characterized the metabolomic profile of two types of 31 breast tumors in human to uncovered pyrimidine metabolism and glutaminolysis pathways are elevated in TNBC. As an example of mixed metabolites and genes analyses, here we are going to use both the dataset of metabolite and gene expression data as reported in the paper. The metabolomics data was accessed from the Supplementary Tables S2 in the paper, and the gene expression data is from the author. They found that pyrimidine and purine metabolism, carbon metabolism, and the energy production related pathways were highly enriched in Cluster 2 while many lipid/fatty acid metabolism related pathways were enriched in Cluster 1. We will use MNet to identify a set of features whose activity changes significantly between the two sample clusters.This result will hopefully hint at some specific biological activities that are pathologically altered in tumoral samples. library(dplyr) library(MNet) library(stringr) library(ggplot2) library(RColorBrewer) dir.create(&quot;result&quot;) group[which(group==&quot;normal&quot;)] &lt;- &quot;a&quot; group[which(group==&quot;tumor&quot;)] &lt;- &quot;normal&quot; group[which(group==&quot;a&quot;)] &lt;- &quot;tumor&quot; all_meta &lt;- mlimma(meta_dat,group) all_gene &lt;- mlimma(gene_dat,group) head(all_meta) ## # A tibble: 6 × 8 ## logFC AveExpr t P.Value adj.P.Val B logP name ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 -2.86 22.6 -9.25 1.52e-10 0.0000000332 14.1 7.48 C02045 ## 2 -2.44 26.2 -7.80 6.83e- 9 0.000000748 10.4 6.13 C00267 ## 3 1.82 27.1 6.80 1.10e- 7 0.00000622 7.64 5.21 C00073 ## 4 3.78 20.9 6.79 1.14e- 7 0.00000622 7.61 5.21 C05674 ## 5 2.20 21.4 6.58 2.07e- 7 0.00000907 7.02 5.04 C00255 ## 6 2.37 21.6 6.45 2.98e- 7 0.0000109 6.66 4.96 C00242 head(all_gene) ## # A tibble: 6 × 8 ## logFC AveExpr t P.Value adj.P.Val B logP name ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 -6.92 23.1 -11.3 1.15e-12 0.0000000203 17.7 7.69 APH1B ## 2 -21.4 23.4 -10.6 5.13e-12 0.0000000455 16.5 7.34 GFRA1 ## 3 5.76 24.4 10.1 1.85e-11 0.0000000891 15.4 7.05 RFC4 ## 4 -10.5 14.8 -10.1 2.01e-11 0.0000000891 15.3 7.05 FAM47E ## 5 10.8 20.6 9.79 3.85e-11 0.000000137 14.7 6.86 ORC6 ## 6 -4.02 5.65 -9.69 4.98e-11 0.000000147 14.5 6.83 FAM87B 2.2 Pathway enrichment analysis 2.2.1 gene pathway enrichment KEGG metabolic pathway-based pathway enrichment (PE) analysis to investigate the dysregulation of metabolic pathways considering genes. ## gene diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_increase &lt;- PathwayAnalysis(diff_gene_increase$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/gene_increase.png&quot;,result_gene_increase$p_barplot,width=10,height = 5) write.table(result_gene_increase$output,&quot;result/gene_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_gene_decrease &lt;- PathwayAnalysis(diff_gene_decrease$name,out=&quot;gene&quot;,p_cutoff=0.05) ggsave(&quot;result/gene_decrease.png&quot;,result_gene_decrease$p_barplot,width=10,height = 5) write.table(result_gene_decrease$output,&quot;result/gene_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) gene_increase and gene_decrease pathway enrichment 2.2.2 metabolite pathway enrichment KEGG metabolic pathway-based pathway enrichment (PE) analysis to investigate the dysregulation of metabolic pathways considering metabolites. ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta %&gt;% dplyr::filter(logFC &gt; 0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_meta_increase &lt;- PathwayAnalysis(diff_meta_increase$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/meta_increase.png&quot;,result_meta_increase$p_barplot,width=10,height = 5) write.table(result_meta_increase$output,&quot;result/meta_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_meta_decrease &lt;- all_meta %&gt;% dplyr::filter(logFC &lt; -0.58) %&gt;% dplyr::filter(adj.P.Val &lt; 0.05) result_meta_decrease &lt;- PathwayAnalysis(diff_meta_decrease$name,out=&quot;metabolite&quot;,p_cutoff=0.05) ggsave(&quot;result/meta_decrease.png&quot;,result_meta_decrease$p_barplot,width=10,height = 5) write.table(result_meta_decrease$output,&quot;result/meta_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) metabolite_increase and metabolite_decrease pathway enrichment 2.2.3 Extended pathway enrichment KEGG metabolic pathway-based extended pathway enrichment analysis (EPEA) to investigate the dysregulation of metabolic pathways considering both metabolites and genes using the function ‘PathwayAnalysis’. ## gene and metabolite diff_increase &lt;- rbind(diff_gene_increase,diff_meta_increase) result_all_increase &lt;- PathwayAnalysis(diff_increase$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/all_increase.png&quot;,result_all_increase$p_barplot,width=10,height = 5) write.table(result_all_increase$output,&quot;result/all_increase.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) diff_decrease &lt;- rbind(diff_gene_decrease,diff_meta_decrease) result_all_decrease &lt;- PathwayAnalysis(diff_decrease$name,out=&quot;Extended&quot;,p_cutoff=0.05) ggsave(&quot;result/all_decrease.png&quot;,result_all_decrease$p_barplot,width=10,height = 5) write.table(result_all_decrease$output,&quot;result/all_decrease.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) Extended pathway enrichment(increase and decrease) 2.2.4 Overview of pathway enrichment analysis meta_increase &lt;- data.table::fread(&quot;result/meta_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;meta_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;metabolite&quot;) meta_decrease &lt;- data.table::fread(&quot;result/meta_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;meta_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;metabolite&quot;) gene_increase &lt;- data.table::fread(&quot;result/gene_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;gene_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;gene&quot;) gene_decrease &lt;- data.table::fread(&quot;result/gene_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;gene_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;gene&quot;) all_increase &lt;- data.table::fread(&quot;result/all_increase.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1 =&quot;all_Cluster1&quot;) %&gt;% dplyr::mutate(type2 =&quot;all&quot;) all_decrease &lt;- data.table::fread(&quot;result/all_decrease.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(name,pvalue) %&gt;% dplyr::mutate(type1=&quot;all_Cluster2&quot;) %&gt;% dplyr::mutate(type2 =&quot;all&quot;) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_meta &lt;- rbind(meta_increase,meta_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.01) result_gene &lt;- rbind(gene_increase,gene_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.05) result_all &lt;- rbind(all_increase,all_decrease) %&gt;% dplyr::filter(pvalue &lt; 0.05) result &lt;- rbind(result_meta,result_gene,result_all) %&gt;% dplyr::filter(!name %in% c(&quot;Sulfur metabolism&quot;,&quot;Fructose and mannose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Butanoate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;, &quot;Amino sugar and nucleotide sugar metabolism&quot;,&quot;Propanoate metabolism&quot;)) %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;name&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::arrange(pvalue) pathway_hh &lt;- unique(result$pathway_type) result &lt;- result %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;,&quot;Biosynthesis of other secondary metabolites&quot;,&quot;Metabolism of other amino acids&quot;)) %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result$name &lt;- factor(result$name,levels = rev(unique(result$name))) result$pathway_type &lt;- factor(result$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result$type1 &lt;- factor(result$type1,levels=c(&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;, &quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) p1 &lt;- ggplot(result,aes(name,-log10(pvalue)))+ geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ coord_flip()+ facet_grid(. ~ type1,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL) #p1 ggsave(&quot;result/epe-v0102.png&quot;,p1,width=15,height = 7) 2.3 Pathway differential abundance score 2.3.1 gene differential abundance score KEGG metabolic pathway-based differential abundance (DA) analysis investigate the dysregulation of metabolic pathways considering only genes. diff_gene_increase &lt;- all_gene %&gt;% dplyr::filter(logFC &gt; 2) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) diff_gene_decrease &lt;- all_gene %&gt;% dplyr::filter(logFC &lt; -2) %&gt;% dplyr::filter(adj.P.Val &lt; 0.01) DAscore_gene &lt;- DAscore(diff_gene_increase$name,diff_gene_decrease$name,all_gene$name, min_measured_num = 10,out=&quot;gene&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/DA_gene.png&quot;,DAscore_gene$p,width=10,height = 8) write.table(DAscore_gene$result,&quot;result/DA_gene.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 2.3.2 metabolite differential abundance score KEGG metabolic pathway-based differential abundance (DA) analysis investigate the dysregulation of metabolic pathways considering only metabolites. ## metabolite ## filter the increase differential genes and metabolites diff_meta_increase &lt;- all_meta %&gt;% dplyr::filter(logFC &gt; 2) %&gt;% dplyr::filter(P.Value &lt; 0.01) diff_meta_decrease &lt;- all_meta %&gt;% dplyr::filter(logFC &lt; 2) %&gt;% dplyr::filter(P.Value &lt; 0.01) DAscore_meta &lt;- DAscore(diff_meta_increase$name,diff_meta_decrease$name,all_meta$name, min_measured_num = 3,out=&quot;metabolite&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/DA_meta.png&quot;,DAscore_meta$p,width=10,height = 8) write.table(DAscore_meta$result,&quot;result/DA_meta.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 2.3.3 Extended pathway differential abundance score KEGG metabolic pathway-based extended differential abundance (EDA) analysis investigate the dysregulation of metabolic pathways considering both metabolites and genes. ## gene and metabolite DAscore_all &lt;- DAscore(c(diff_gene_increase$name,diff_meta_increase$name), c(diff_gene_decrease$name,diff_meta_decrease$name), c(all_gene$name,all_meta$name),min_measured_num = 13, out=&quot;Extended&quot;,sort_plot=&quot;category&quot;) ggsave(&quot;result/DA_all.png&quot;,DAscore_all$p,width=10,height = 10) write.table(DAscore_all$result,&quot;result/DA_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 2.3.4 Overview of pathway differential abundance score meta &lt;- data.table::fread(&quot;result/DA_meta.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::mutate(Type=&quot;metabolite&quot;) gene &lt;- data.table::fread(&quot;result/DA_gene.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::mutate(Type=&quot;gene&quot;) all &lt;- data.table::fread(&quot;result/DA_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 13) %&gt;% dplyr::mutate(Type=&quot;all&quot;) result &lt;- rbind(meta,gene,all) %&gt;% dplyr::filter(!Pathway %in% c(&quot;Sulfur metabolism&quot;,&quot;Fructose and mannose metabolism&quot;,&quot;Ascorbate and aldarate metabolism&quot;, &quot;Galactose metabolism&quot;,&quot;Butanoate metabolism&quot;,&quot;Pentose and glucuronate interconversions&quot;,&quot;Starch and sucrose metabolism&quot;, &quot;Amino sugar and nucleotide sugar metabolism&quot;,&quot;Propanoate metabolism&quot;,&quot;Inositol phosphate metabolism&quot;, &quot;Tryptophan metabolism&quot;, &quot;Selenocompound metabolism&quot;)) %&gt;% dplyr::filter(!`Pathway Category` %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Xenobiotics biodegradation and metabolism&quot;, &quot;Glycan biosynthesis and metabolism&quot;,&quot;Metabolism of other amino acids&quot;)) result_filter &lt;- result %&gt;% dplyr::arrange(DA_score) %&gt;% dplyr::arrange(`Pathway Category`) result_filter$Pathway &lt;- factor(result_filter$Pathway,levels=unique(result_filter$Pathway)) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;metabolite&quot;, &quot;gene&quot;,&quot;all&quot;)) p &lt;- ggplot2::ggplot(result_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ ggplot2::coord_flip()+ # ggplot2::ylab(&quot;DA score&quot;)+ ggplot2::xlab(NULL)+ ggplot2::theme_bw()+ facet_grid(. ~ Type,scales=&quot;free_x&quot;) ggsave(&quot;result/DA-v0102.png&quot;,p,width=18,height = 7) 2.4 ESEA Metabolite Set Enrichment Analysis the metabolite set enrichment analysis using function “ESEA” all_result &lt;- rbind(all_meta,all_gene) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta$logFC names(meta) &lt;- all_meta$name result_meta &lt;- ESEA(meta,out=&quot;metabolite&quot;,minSize = 3) result_gene &lt;- ESEA(gene,out = &quot;gene&quot;,minSize = 10) result_all &lt;- ESEA(all,out=&quot;Extended&quot;,minSize = 13) kegg_pathway_uniq &lt;- PathwayExtendData %&gt;% dplyr::select(kegg_pathwayname,kegg_category) %&gt;% dplyr::rename(&quot;PATHWAY&quot;=&quot;kegg_pathwayname&quot;) %&gt;% dplyr::rename(&quot;pathway_type&quot;=&quot;kegg_category&quot;) %&gt;% unique() result_meta_filter &lt;- result_meta %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;)) result_gene_filter &lt;- result_gene %&gt;% dplyr::filter(pval &lt; 0.2) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;)) result_all_filter &lt;- result_all %&gt;% dplyr::filter(pval &lt; 0.2) %&gt;% dplyr::mutate(Type=ifelse(NES&gt;0,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) result &lt;- rbind(result_meta_filter,result_gene_filter,result_all_filter) result_filter &lt;- result %&gt;% dplyr::left_join(kegg_pathway_uniq,by=c(&quot;pathway&quot;=&quot;PATHWAY&quot;)) %&gt;% dplyr::filter(pathway_type != &quot;Glycan biosynthesis and metabolism&quot;) %&gt;% dplyr::filter(!pathway_type %in% c(&quot;Metabolism of terpenoids and polyketides&quot;,&quot;Metabolism of cofactors and vitamins&quot;, &quot;Biosynthesis of other secondary metabolites&quot;,&quot;Xenobiotics biodegradation and metabolism&quot;,&quot;Metabolism of other amino acids&quot;)) %&gt;% dplyr::arrange(pval) pathway_hh &lt;- unique(result_filter$pathway_type) result_filter &lt;- result_filter %&gt;% dplyr::arrange(match(pathway_type,pathway_hh)) result_filter$pathway &lt;- factor(result_filter$pathway,levels = rev(unique(result_filter$pathway))) result_filter$pathway_type &lt;- factor(result_filter$pathway_type,levels=unique(kegg_pathway_uniq$pathway_type)) result_filter$Type &lt;- factor(result_filter$Type,levels=c(&quot;meta_Cluster1&quot;,&quot;meta_Cluster2&quot;, &quot;gene_Cluster1&quot;,&quot;gene_Cluster2&quot;,&quot;all_Cluster1&quot;,&quot;all_Cluster2&quot;)) p &lt;- ggplot(result_filter,aes(pathway,-log10(pval))) + geom_bar(stat=&quot;identity&quot;,aes(fill=pathway_type))+ scale_fill_manual(values=RColorBrewer::brewer.pal(11, &quot;Set3&quot;),name=&quot;Pathway Category&quot;, breaks=unique(kegg_pathway_uniq$pathway_type))+ scale_y_continuous(expand = c(0, 0))+ facet_grid(. ~ Type,scales=&quot;free_x&quot;)+ theme_bw()+ labs(x=NULL)+ coord_flip() ggsave(&quot;result/ESEA_facet.png&quot;,p,width=15,height = 7) the msea plot of interested pathway all_meta &lt;- mlimma(meta_dat,group) %&gt;% dplyr::arrange(logFC) all_gene &lt;- mlimma(gene_dat,group) %&gt;% dplyr::arrange(logFC) all_result &lt;- rbind(all_meta,all_gene) %&gt;% dplyr::arrange(logFC) all &lt;- all_result$logFC names(all) &lt;- all_result$name gene &lt;- all_gene$logFC names(gene) &lt;- all_gene$name meta &lt;- all_meta$logFC names(meta) &lt;- all_meta$name p1 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,gene,out=&quot;gene&quot;) ggsave(&quot;result/plot_msea_oxipho_gene.png&quot;,p1,width=5,height = 5) p2 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,meta,out=&quot;metabolite&quot;) ggsave(&quot;result/plot_msea_oxipho_metabolite.png&quot;,p2,width=5,height = 5) p3 &lt;- pMSEA(&quot;Oxidative phosphorylation&quot;,all,out=&quot;Extended&quot;) ggsave(&quot;result/plot_msea_oxipho_all.png&quot;,p3,width=5,height = 5) p &lt;- pMSEA(&quot;Fatty acid biosynthesis&quot;,meta,out=&quot;metabolite&quot;) ggsave(&quot;result/plot_msea_Fatty acid biosynthesis_metabolite.png&quot;,p,width=5,height = 5) "],["example-rountine-analyses.html", "Chapter 3 Example-rountine analyses 3.1 Metabolite and kegg name change 3.2 Group-wise analyses 3.3 Pathway analysis 3.4 Clinical analysis", " Chapter 3 Example-rountine analyses 3.1 Metabolite and kegg name change 3.1.1 Metabolite name changed to refmet name This step requires networking RefMet: A Reference list of Metabolite names The main objective of RefMet is to provide a standardized reference nomenclature for both discrete metabolite structures and metabolite species identified by spectroscopic techniques in metabolomics experiments. compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) refmetid_result &lt;- name2refmet(compound_name) write.table(refmetid_result,&quot;result/refmetid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Input_name Refmet_name Formula Super_class Main_class ## 1 2-Hydroxybutyric acid 2-Hydroxybutyric acid C4H8O3 Fatty Acyls Fatty acids ## 2 1-Methyladenosine 1-Methyladenosine C11H15N5O4 Nucleic acids Purines ## 3 tt tt &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 4 2-Aminooctanoic acid 2-Aminocaprylic acid C8H17NO2 Fatty Acyls Fatty acids ## Sub_class ## 1 Hydroxy FA ## 2 Purine ribonucleosides ## 3 &lt;NA&gt; ## 4 Amino FA 3.1.2 Metabolite name changed to kegg id This step requires networking search the kegg id corresponding to the metabolites name compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) keggid_result &lt;- name2keggid(compound_name) %&gt;% tidyr::separate_rows(KEGG_id,sep=&quot;;&quot;) %&gt;% tibble::as_tibble() write.table(keggid_result,&quot;result/keggid_result.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Name KEGG_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; 3.1.3 Metabolite name corresponding to kegg pathway This step requires networking search the kegg pathway corresponding to the metabolite name compound_name &lt;- c(&quot;2-Hydroxybutyric acid&quot;,&quot;1-Methyladenosine&quot;,&quot;tt&quot;,&quot;2-Aminooctanoic acid&quot;) result_all &lt;- name2pathway(compound_name) ##### the output is the each metabolite related pathway result_name2pathway &lt;- result_all$name2pathway write.table(result_name2pathway,&quot;result/name2pathway_keggpathway.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2keggid &lt;- result_all$kegg_id write.table(result_name2keggid,&quot;result/name2pathway_keggid.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) result_name2enrichpathway &lt;- result_all$pathway write.table(result_name2enrichpathway,&quot;result/name2pathway_pathwayenrich.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) ## Name KEGG_id Pathway Pathway_category Pathway_id ## 1 2-Hydroxybutyric acid C05984 Propanoate metabolism Carbohydrate metabolism hsa00640 ## Name KEGG_id ## 1 2-Hydroxybutyric acid C05984 ## 2 1-Methyladenosine C02494 ## 3 tt &lt;NA&gt; ## 4 2-Aminooctanoic acid &lt;NA&gt; ## name nAnno nOverlap fc zscore pvalue adjp or CIl CIu distance namespace ## 1 Propanoate metabolism 40 1 76.1 8.66 0 0 Inf 1.93 Inf 1 Customised ## members_Overlap ## 1 C05984 ## members_Anno ## 1 C00024, C00042, C00068, C00083, C00091, C00099, C00100, C00109, C00111, C00163, C00186, C00222, C00424, C00479, C00546, C00583, C00683, C00804, C00827, C00894, C01013, C01213, C02170, C02225, C02335, C02876, C04225, C04593, C05235, C05668, C05979, C05983, C05984, C05989, C06002, C15972, C15973, C21017, C21018, C21250 ## members_Overlap_name ## 1 2-Hydroxybutanoic acid ## members_Anno_name ## 1 Acetyl-CoA;Succinate;Thiamin diphosphate;Malonyl-CoA;Succinyl-CoA;beta-Alanine;Propanoyl-CoA;2-Oxobutanoate;Glycerone phosphate;Propanoate;(S)-Lactate;3-Oxopropanoate;(S)-Lactaldehyde;Propanal;Methylglyoxal;Propane-1,2-diol;(S)-Methylmalonyl-CoA;Propynoate;Lactoyl-CoA;Propenoyl-CoA;3-Hydroxypropanoate;(R)-Methylmalonyl-CoA;Methylmalonate;2-Methylcitrate;beta-Alanyl-CoA;Propanoyl phosphate;(Z)-But-2-ene-1,2,3-tricarboxylate;(2S,3R)-3-Hydroxybutane-1,2,3-tricarboxylate;Hydroxyacetone;3-Hydroxypropionyl-CoA;Propane-1-ol;Propionyladenylate;2-Hydroxybutanoic acid;3-Oxopropionyl-CoA;(S)-Methylmalonate semialdehyde;Enzyme N6-(lipoyl)lysine;Enzyme N6-(dihydrolipoyl)lysine;2-(alpha-Hydroxypropyl)thiamine diphosphate;Enzyme N6-(S-propyldihydrolipoyl)lysine;2-Methyl-trans-aconitate 3.1.4 Metabolite keggid to kegg pathway library(MNet) keggid &lt;- c(&quot;C05984&quot;,&quot;C02494&quot;) ##### the output is the each metabolite related pathway keggpathway_result &lt;- keggid2pathway(keggid) head(keggpathway_result) ## # A tibble: 1 × 5 ## ENTRY NAME PATHWAY pathway_type V2 ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 C05984 2-Hydroxybutanoic acid;///2-Hydroxybutyrate;///2-Hydroxybutyric ac… Propan… Carbohydrat… hsa0… 3.1.5 the pathway information result &lt;- pathwayinfo(&quot;hsa00630&quot;) result &lt;- pathwayinfo(&quot;Glyoxylate and dicarboxylate metabolism&quot;) result$gene_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname kegg_category ## 1 gene ACSS1 hsa00630 Glyoxylate and dicarboxylate metabolism Carbohydrate metabolism ## 2 gene ACSS2 hsa00630 Glyoxylate and dicarboxylate metabolism Carbohydrate metabolism result$compound_info[1:2,] ## type name kegg_pathwayid kegg_pathwayname kegg_category ## 1 metabolite C00007 hsa00630 Glyoxylate and dicarboxylate metabolism Carbohydrate metabolism ## 2 metabolite C00011 hsa00630 Glyoxylate and dicarboxylate metabolism Carbohydrate metabolism 3.1.6 pathway name to pathway id pathwayid &lt;- pathway2pathwayid(&quot;Glycolysis / Gluconeogenesis&quot;) pathwayid ## PATHWAY pathwayid ## 1 Glycolysis / Gluconeogenesis hsa00010 3.2 Group-wise analyses 3.2.1 PCA plot PCA of the data ### the pca plot p_PCA &lt;- pPCA(meta_dat,group) ggsave(&quot;result/1.PCA_1.pdf&quot;,p_PCA$p1,height = 6,width = 6) ggsave(&quot;result/1.PCA_2.pdf&quot;,p_PCA$p2,height = 6,width = 6) ggsave(&quot;result/1.PCA_3.pdf&quot;,p_PCA$p3,height = 10,width = 10) ggsave(&quot;result/1.PCA_1.png&quot;,p_PCA$p1,height = 6,width = 6) ggsave(&quot;result/1.PCA_2.png&quot;,p_PCA$p2,height = 6,width = 6) ggsave(&quot;result/1.PCA_3.png&quot;,p_PCA$p3,height = 10,width = 10) 3.2.2 Differnetial metabolite analysis 3.2.2.1 using the function mlimma in R packages “MNet” diff_result &lt;- mlimma(meta_dat,group) 3.2.2.2 using the function DM in R packages “MNet” diff_result &lt;- DM(2**meta_dat,group) dev.off() write.table(diff_result,&quot;result/DM_result.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## filter the differential metabolites by default fold change &gt;1.5 or &lt; 1/1.5 ,Padj_wilcox &lt; 0.05 and VIP&gt;1 diff_result_filter &lt;- diff_result %&gt;% dplyr::filter(Fold_change &gt;1.3 | Fold_change &lt; 1/1.3) %&gt;% dplyr::filter(Padj_wilcox&lt;0.1) %&gt;% dplyr::filter(VIP&gt;0.8) utils::write.table(diff_result,&quot;result/2.all_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) utils::write.table(diff_result_filter,&quot;result/2.diff_TumorvsNormal.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 3.2.3 Differential metabolites’ volcano the volcano plot of metabolites using the function “pVolcano” in the package “MNet” p_volcano &lt;- pVolcano(diff_result,foldchange=1.5) #p_volcano ggsave(&quot;result/3.volcano.pdf&quot;,p_volcano,height = 3,width = 4) ggsave(&quot;result/3.volcano.png&quot;,p_volcano,height = 3,width = 4) 3.2.4 Differential metabolites’ heatmap the heatmap plot of differentital metabolites using the function “pHeatmap” in R package “MNet” meta_dat_diff &lt;- meta_dat[rownames(meta_dat) %in% diff_result_filter$Name,] p_heatmap &lt;- pHeatmap(meta_dat_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=&quot;ward.D&quot;,clustering_distance_cols=&quot;correlation&quot;) ggsave(&quot;result/3.heatmap.pdf&quot;,p_heatmap,width=10,height=8) ggsave(&quot;result/3.heatmap.png&quot;,p_heatmap,width=10,height=8) 3.2.5 Differential metabolites’ zscore the zscore plot of differentital metabolites using the function “pZscore” in R package “MNet” p_zscore &lt;- pZscore(meta_dat_diff,group) #p_zscore ggsave(&quot;result/3.z_score.pdf&quot;,p_zscore,width=6,height=8) ggsave(&quot;result/3.z_score.png&quot;,p_zscore,width=6,height=8) 3.3 Pathway analysis 3.3.1 pathview only metabolite library(pathview) kegg_id &lt;- c(&quot;C02494&quot;,&quot;C03665&quot;,&quot;C01546&quot;,&quot;C05984&quot;,&quot;C14088&quot;,&quot;C00587&quot;) value &lt;- c(-0.3824620,0.1823628,-1.1681486,0.5164899,1.6449798,-0.7340652) names(value) &lt;- kegg_id cpd.data &lt;- value gene_name &lt;- c(&quot;LDHA&quot;,&quot;BCKDHB&quot;,&quot;PCCA&quot;,&quot;ACSS1&quot;) gene_value &lt;- c(1,0.5,-1,-1) names(gene_value) &lt;- gene_name pPathview(cpd.data,outdir=&quot;result&quot;) 3.3.2 pathview metabolite and gene pPathview(cpd.data=cpd.data,gene.data=gene_value,outdir=&quot;result&quot;) 3.4 Clinical analysis 3.4.1 Time series of clinical the column contains the time, group, clinical index(such as ALT), low and high clinical_index[1:5,] time_series_ALT &lt;- pCliTS(clinical_index,&quot;ALT&quot;) ggsave(&quot;result/clinical_time_series.pdf&quot;,time_series_ALT,height = 4,width = 5) ggsave(&quot;result/clinical_time_series.png&quot;,time_series_ALT,height = 4,width = 5) 3.4.2 Survival analysis library(survival) names(aml)[3] =&quot;group&quot; p=survCli(aml) pdf(&quot;result/survival.pdf&quot;,height = 6,width = 6, onefile = F) p dev.off() png(&quot;result/survival.png&quot;,height = 600,width = 600) p dev.off() 3.4.3 Metabolites’ survival plot metabolites &lt;- c(&quot;C03819&quot;,&quot;C02918&quot;,&quot;C03916&quot;) survMet(dat_surv,metabolites,cluster_method=&quot;mean&quot;,out_dir=&quot;result/survival/&quot;) 3.4.4 Cox analysis result &lt;- MetCox(dat_surv) write.table(result,&quot;result/clinical_cox.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names = F) "],["session-information.html", "Chapter 4 Session information", " Chapter 4 Session information sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.6 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] RColorBrewer_1.1-3 ggplot2_3.4.2 stringr_1.5.0 MNet_0.1.0 dplyr_1.1.1 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.2.0 xfun_0.38 bslib_0.4.2 splines_4.2.1 ## [5] lattice_0.21-8 colorspace_2.1-0 vctrs_0.6.1 generics_0.1.3 ## [9] htmltools_0.5.5 yaml_2.3.7 mgcv_1.8-42 utf8_1.2.3 ## [13] rlang_1.1.0 e1071_1.7-13 jquerylib_0.1.4 pillar_1.9.0 ## [17] glue_1.6.2 withr_2.5.0 BiocGenerics_0.42.0 lifecycle_1.0.3 ## [21] munsell_0.5.0 gtable_0.3.3 htmlwidgets_1.6.2 evaluate_0.20 ## [25] Biobase_2.56.0 knitr_1.42 permute_0.9-7 fastmap_1.1.1 ## [29] crosstalk_1.2.0 parallel_4.2.1 class_7.3-21 fansi_1.0.4 ## [33] highr_0.10 DT_0.27 scales_1.2.1 limma_3.52.4 ## [37] cachem_1.0.7 vegan_2.6-4 jsonlite_1.8.4 png_0.1-8 ## [41] digest_0.6.31 stringi_1.7.12 bookdown_0.33 grid_4.2.1 ## [45] cli_3.6.1 tools_4.2.1 magrittr_2.0.3 sass_0.4.5 ## [49] proxy_0.4-27 tibble_3.2.1 cluster_2.1.4 pkgconfig_2.0.3 ## [53] ellipsis_0.3.2 MASS_7.3-58.3 Matrix_1.5-4 data.table_1.14.8 ## [57] rmarkdown_2.21 rstudioapi_0.14 R6_2.5.1 igraph_1.4.2 ## [61] nlme_3.1-162 compiler_4.2.1 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
